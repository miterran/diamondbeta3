{"version":3,"sources":["../../src/models/League.js"],"names":["sportEnum","map","sport","Schema","availableLeagueSchema","league","type","String","region","oddTypes","enum","LeagueSchema","provider","required","apiLink","bookmaker","category","availableLeagues","updatedAt","Date","League","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAGA;;;;;;AAFA,IAAMA,YAAY,oBAAUC,GAAV,CAAc,iBAAS;AAAE,QAAOC,MAAMA,KAAb;AAAoB,CAA7C,CAAlB;;AAIA,IAAMC,SAAS,mBAASA,MAAxB;;AAEA,IAAMC,wBAAwBD,OAAO;AACpCE,SAAQ,EAAEC,MAAMC,MAAR,EAD4B;AAEpCC,SAAQ,EAAEF,MAAMC,MAAR,EAF4B;AAGpCE,WAAU,CAAC,EAAEH,MAAMC,MAAR,EAAgBG,wBAAhB,EAAD;AAH0B,CAAP,CAA9B;;AAMA,IAAMC,eAAeR,OAAO;AAC3BS,WAAU,EAAEN,MAAMC,MAAR,EAAgBG,MAAM,CAAE,SAAF,CAAtB,EAAqCG,UAAU,IAA/C,EADiB;AAE3BC,UAAS,EAAER,MAAMC,MAAR,EAAgBM,UAAU,IAA1B,EAFkB;AAG3BE,YAAW,EAAET,MAAMC,MAAR,EAAgBM,UAAU,IAA1B,EAHgB;AAI3BG,WAAU,EAAEV,MAAMC,MAAR,EAAgBG,MAAM,CAAE,YAAF,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,QAAtC,EAAgD,KAAhD,EAAuD,QAAvD,EAAiE,UAAjE,CAAtB,EAAqGG,UAAU,IAA/G,EAJiB;AAK3BX,QAAO,EAAEI,MAAMC,MAAR,EAAgBG,MAAMV,SAAtB,EAAiCa,UAAU,IAA3C,EALoB;AAM3BI,mBAAkB,CAACb,qBAAD,CANS;AAO3Bc,YAAW,EAAEZ,MAAMa,IAAR,EAAcN,UAAU,IAAxB;AAPgB,CAAP,CAArB;;AAUA,IAAMO,SAAS,mBAASC,KAAT,CAAe,QAAf,EAAyBV,YAAzB,CAAf;;kBAEeS,M","file":"League.js","sourcesContent":["import oddTypesEnum from '../utils/oddTypes'\nimport sportList from '../utils/sportList'\nconst sportEnum = sportList.map(sport => { return sport.sport })\n\nimport mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema\n\nconst availableLeagueSchema = Schema({\n\tleague: { type: String },\n\tregion: { type: String },\n\toddTypes: [{ type: String, enum: oddTypesEnum }]\n})\n\nconst LeagueSchema = Schema({\n\tprovider: { type: String, enum: [ 'jsonOdd' ], required: true },\n\tapiLink: { type: String, required: true },\n\tbookmaker: { type: String, required: true },\n\tcategory: { type: String, enum: [ 'Basketball', 'Soccer', 'Football', 'Boxing', 'MMA', 'Hockey', 'Baseball' ], required: true },\n\tsport: { type: String, enum: sportEnum, required: true },\n\tavailableLeagues: [availableLeagueSchema],\n\tupdatedAt: { type: Date, required: true }\n})\n\nconst League = mongoose.model('League', LeagueSchema)\n\nexport default League"]}