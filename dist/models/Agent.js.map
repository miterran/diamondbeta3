{"version":3,"sources":["../../src/models/Agent.js"],"names":["Schema","AgentSchema","account","role","type","String","default","required","username","password","passcode","email","activate","Boolean","defaultSetting","maxPlayer","Number","currentStatus","existedPlayer","activePlayer","credit","creditPending","availableCredit","players","Types","ObjectId","ref","superAgent","createdAt","Date","now","Agent","model"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,SAAS,mBAASA,MAAxB;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAKA,IAAMC,cAAc,mBAASD,MAAT,CAAgB;AACnCE,UAAS;AACRC,QAAM,EAAEC,MAAMC,MAAR,EAAgBC,SAAS,OAAzB,EAAkCC,UAAU,IAA5C,EADE;AAERC,YAAU,EAAEJ,MAAMC,MAAR,EAAgBE,UAAU,IAA1B,EAFF;AAGRE,YAAU,EAAEL,MAAMC,MAAR,EAAgBC,SAAS,MAAzB,EAAiCC,UAAU,IAA3C,EAHF;AAIRG,YAAU,EAAEN,MAAMC,MAAR,EAAgBC,SAAS,MAAzB,EAAiCC,UAAU,IAA3C,EAJF;AAKRI,SAAO,EAAEP,MAAMC,MAAR,EALC;AAMRO,YAAU,EAAER,MAAMS,OAAR,EAAiBP,SAAS,IAA1B,EAAgCC,UAAU,IAA1C;AANF,EAD0B;AASnCO,iBAAgB;AACfC,aAAW,EAAEX,MAAMY,MAAR,EAAgBV,SAAS,EAAzB,EAA6BC,UAAU,IAAvC;AADI,EATmB;AAYnCU,gBAAe;AACdC,iBAAe,EAAEd,MAAMY,MAAR,EAAgBV,SAAS,CAAzB,EADD;AAEda,gBAAc,EAAEf,MAAMY,MAAR,EAAgBV,SAAS,CAAzB,EAFA;AAGdc,UAAQ,EAAEhB,MAAMY,MAAR,EAAgBV,SAAS,CAAzB,EAHM;AAIde,iBAAe,EAAEjB,MAAMY,MAAR,EAAgBV,SAAS,CAAzB,EAJD;AAKdgB,mBAAiB,EAAElB,MAAMY,MAAR,EAAgBV,SAAS,CAAzB;AALH,EAZoB;AAmBnCiB,UAAS,CAAC,EAAEnB,MAAMJ,OAAOwB,KAAP,CAAaC,QAArB,EAA+BC,KAAK,QAApC,EAAD,CAnB0B;AAoBnCC,aAAY,EAAEvB,MAAMJ,OAAOwB,KAAP,CAAaC,QAArB,EAA+BC,KAAK,YAApC,EApBuB;AAqBnCE,YAAW,EAAExB,MAAMyB,IAAR,EAAcvB,SAASuB,KAAKC,GAA5B,EAAiCvB,UAAU,IAA3C;AArBwB,CAAhB,CAApB;;AAwBA,IAAMwB,QAAQ,mBAASC,KAAT,CAAe,OAAf,EAAwB/B,WAAxB,CAAd;;kBAEe8B,K","file":"Agent.js","sourcesContent":["import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n\n\n// import mongoose from 'mongoose'\n// const Schema = mongoose.Schema\n\n// const AgentCreditTransactionSchema = mongoose.Schema({\n// \towner:{\n// \t\tsuperAgent : { type: Schema.Types.ObjectId, ref: 'SuperAgent' },\n// \t\tagent : { type: Schema.Types.ObjectId, ref: 'Agent' },\n// \t\tplayer: { type: Schema.Types.ObjectId, ref: 'Player' }\n// \t},\n// \tamount: { type: Number },\n// \tbalance: { type: Number },\n// \ttype: { type: String },\n// \torderNumber: { type: String },\n// \tcreatedAt: { type: Date, default: Date.now }\n// })\n\n// const AgentCreditTransaction = mongoose.model('AgentCreditTransaction', AgentCreditTransactionSchema)\n\n// export default AgentCreditTransaction\n\n\n\n\nconst AgentSchema = mongoose.Schema({\n\taccount: {\n\t\trole: { type: String, default: 'agent', required: true },\n\t\tusername: { type: String, required: true },\n\t\tpassword: { type: String, default: '1234', required: true },\n\t\tpasscode: { type: String, default: '1234', required: true },\n\t\temail: { type: String },\n\t\tactivate: { type: Boolean, default: true, required: true },\n\t},\n\tdefaultSetting: {\n\t\tmaxPlayer: { type: Number, default: 10, required: true },\n\t},\n\tcurrentStatus: {\n\t\texistedPlayer: { type: Number, default: 0 },\n\t\tactivePlayer: { type: Number, default: 0 },\n\t\tcredit: { type: Number, default: 0 },\n\t\tcreditPending: { type: Number, default: 0 },\n\t\tavailableCredit: { type: Number, default: 0 }\n\t},\n\tplayers: [{ type: Schema.Types.ObjectId, ref: 'Player' }],\n\tsuperAgent: { type: Schema.Types.ObjectId, ref: 'SuperAgent' },\n\tcreatedAt: { type: Date, default: Date.now, required: true }\n})\n\nconst Agent = mongoose.model('Agent', AgentSchema)\n\nexport default Agent\n"]}