{"version":3,"sources":["../../src/models/Agent.js"],"names":["Schema","AgentCreditTransactionSchema","owner","superAgent","type","Types","ObjectId","ref","agent","player","amount","Number","balance","String","orderNumber","createdAt","Date","default","now","AgentSchema","account","role","required","username","password","passcode","email","activate","Boolean","defaultSetting","maxPlayer","credit","Agent","model"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,SAAS,mBAASA,MAAxB;;AAGA;AACA;;AAEA,IAAMC,+BAA+B,mBAASD,MAAT,CAAgB;AACpDE,QAAM;AACLC,cAAa,EAAEC,MAAMJ,OAAOK,KAAP,CAAaC,QAArB,EAA+BC,KAAK,YAApC,EADR;AAELC,SAAQ,EAAEJ,MAAMJ,OAAOK,KAAP,CAAaC,QAArB,EAA+BC,KAAK,OAApC,EAFH;AAGLE,UAAQ,EAAEL,MAAMJ,OAAOK,KAAP,CAAaC,QAArB,EAA+BC,KAAK,QAApC;AAHH,EAD8C;AAMpDG,SAAQ,EAAEN,MAAMO,MAAR,EAN4C;AAOpDC,UAAS,EAAER,MAAMO,MAAR,EAP2C;AAQpDP,OAAM,EAAEA,MAAMS,MAAR,EAR8C;AASpDC,cAAa,EAAEV,MAAMS,MAAR,EATuC;AAUpDE,YAAW,EAAEX,MAAMY,IAAR,EAAcC,SAASD,KAAKE,GAA5B;AAVyC,CAAhB,CAArC;;AAaA;;AAEA;;;AAKA,IAAMC,cAAc,mBAASnB,MAAT,CAAgB;AACnCoB,UAAS;AACRC,QAAM,EAAEjB,MAAMS,MAAR,EAAgBI,SAAS,OAAzB,EAAkCK,UAAU,IAA5C,EADE;AAERC,YAAU,EAAEnB,MAAMS,MAAR,EAAgBS,UAAU,IAA1B,EAFF;AAGRE,YAAU,EAAEpB,MAAMS,MAAR,EAAgBI,SAAS,MAAzB,EAAiCK,UAAU,IAA3C,EAHF;AAIRG,YAAU,EAAErB,MAAMS,MAAR,EAAgBI,SAAS,MAAzB,EAAiCK,UAAU,IAA3C,EAJF;AAKRI,SAAO,EAAEtB,MAAMS,MAAR,EALC;AAMRc,YAAU,EAAEvB,MAAMwB,OAAR,EAAiBX,SAAS,IAA1B,EAAgCK,UAAU,IAA1C;AANF,EAD0B;AASnCO,iBAAgB;AACfC,aAAW,EAAE1B,MAAMO,MAAR,EAAgBM,SAAS,EAAzB,EAA6BK,UAAU,IAAvC;AADI,EATmB;AAYnCnB,aAAY,EAAEC,MAAMJ,OAAOK,KAAP,CAAaC,QAArB,EAA+BC,KAAK,YAApC,EAZuB;AAanCwB,SAAQ,EAAE3B,MAAMO,MAAR,EAAgBM,SAAS,CAAzB,EAA4BK,UAAU,IAAtC,EAb2B;AAcnCP,YAAW,EAAEX,MAAMY,IAAR,EAAcC,SAASD,KAAKE,GAA5B,EAAiCI,UAAU,IAA3C;AAdwB,CAAhB,CAApB;;AAiBA,IAAMU,QAAQ,mBAASC,KAAT,CAAe,OAAf,EAAwBd,WAAxB,CAAd;;kBAEea,K","file":"Agent.js","sourcesContent":["import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n\n\n// import mongoose from 'mongoose'\n// const Schema = mongoose.Schema\n\nconst AgentCreditTransactionSchema = mongoose.Schema({\n\towner:{\n\t\tsuperAgent : { type: Schema.Types.ObjectId, ref: 'SuperAgent' },\n\t\tagent : { type: Schema.Types.ObjectId, ref: 'Agent' },\n\t\tplayer: { type: Schema.Types.ObjectId, ref: 'Player' }\n\t},\n\tamount: { type: Number },\n\tbalance: { type: Number },\n\ttype: { type: String },\n\torderNumber: { type: String },\n\tcreatedAt: { type: Date, default: Date.now }\n})\n\n// const AgentCreditTransaction = mongoose.model('AgentCreditTransaction', AgentCreditTransactionSchema)\n\n// export default AgentCreditTransaction\n\n\n\n\nconst AgentSchema = mongoose.Schema({\n\taccount: {\n\t\trole: { type: String, default: 'agent', required: true },\n\t\tusername: { type: String, required: true },\n\t\tpassword: { type: String, default: '1234', required: true },\n\t\tpasscode: { type: String, default: '1234', required: true },\n\t\temail: { type: String },\n\t\tactivate: { type: Boolean, default: true, required: true },\n\t},\n\tdefaultSetting: {\n\t\tmaxPlayer: { type: Number, default: 10, required: true },\n\t},\n\tsuperAgent: { type: Schema.Types.ObjectId, ref: 'SuperAgent' },\n\tcredit: { type: Number, default: 0, required: true },\n\tcreatedAt: { type: Date, default: Date.now, required: true }\n})\n\nconst Agent = mongoose.model('Agent', AgentSchema)\n\nexport default Agent\n"]}