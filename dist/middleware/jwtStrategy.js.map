{"version":3,"sources":["../../src/middleware/jwtStrategy.js"],"names":["ExtractJwt","JwtStrategy","Strategy","jwtOptions","jwtFromRequest","fromAuthHeader","secretOrKey","jwtSecret","strategy","jwt_payload","next","role","id","findOneAndUpdate","Types","ObjectId","$set","lastOnline","user","agent","findOne","superAgent"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;AACA,IAAMA,aAAa,sBAAYA,UAA/B;AACA,IAAMC,cAAc,sBAAYC,QAAhC;;AAEA,IAAMC,aAAa;AAClBC,iBAAgBJ,WAAWK,cAAX,EADE;AAElBC,cAAc,iBAAOC;AAFH,CAAnB;;AAKA,IAAMC,WAAW,IAAIP,WAAJ,CAAgBE,UAAhB;AAAA,sDAA4B,iBAAOM,WAAP,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpCC,UAFoC,GAEvBF,WAFuB,CAEpCE,IAFoC,EAE9BC,EAF8B,GAEvBH,WAFuB,CAE9BG,EAF8B;AAAA,oBAGrCD,IAHqC;AAAA,sCAItC,QAJsC,uBAQtC,OARsC,uBAYtC,YAZsC;AAAA;;AAAA;AAAA;AAAA,aAKvB,iBAAOE,gBAAP,CAAwB,EAAE,OAAO,mBAASC,KAAT,CAAeC,QAAf,CAAwBH,EAAxB,CAAT,EAAxB,EAAgE,EAAEI,MAAM,EAAEC,YAAY,uBAAd,EAAR,EAAhE,EAAoG,+GAApG,CALuB;;AAAA;AAKpCC,UALoC;;AAM1CA,aAAOR,KAAK,IAAL,EAAWQ,IAAX,CAAP,GAA0BR,KAAK,IAAL,EAAW,KAAX,CAA1B;AAN0C;;AAAA;AAAA;AAAA,aAStB,gBAAMG,gBAAN,CAAuB,EAAE,OAAO,mBAASC,KAAT,CAAeC,QAAf,CAAwBH,EAAxB,CAAT,EAAvB,EAA+D,EAAEI,MAAM,EAAEC,YAAY,uBAAd,EAAR,EAA/D,EAAmG,yGAAnG,CATsB;;AAAA;AASpCE,WAToC;;AAU1CA,cAAQT,KAAK,IAAL,EAAWS,KAAX,CAAR,GAA4BT,KAAK,IAAL,EAAW,KAAX,CAA5B;AAV0C;;AAAA;AAAA;AAAA,aAajB,qBAAWU,OAAX,CAAmB,EAAE,OAAO,mBAASN,KAAT,CAAeC,QAAf,CAAwBH,EAAxB,CAAT,EAAnB,EAA2D,2DAA3D,CAbiB;;AAAA;AAapCS,gBAboC;;AAc1CA,mBAAaX,KAAK,IAAL,EAAWW,UAAX,CAAb,GAAsCX,KAAK,IAAL,EAAW,KAAX,CAAtC;AAd0C;;AAAA;AAiB1CA,WAAK,IAAL,EAAW,KAAX;AAjB0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA5B;;AAAA;AAAA;AAAA;AAAA,IAAjB;;kBAuBeF,Q","file":"jwtStrategy.js","sourcesContent":["import config from '../config';\nimport updatePlayerStatusAfterOrder from '../updateDB/updateUser/updatePlayerStatusAfterOrder'\n\n\nimport Player from '../models/Player';\nimport Agent from '../models/Agent';\nimport SuperAgent from '../models/SuperAgent';\nimport { OpenBet, HistoryBet } from '../models/BetOrder';\n\nimport mongoose from 'mongoose'\n\nimport moment from 'moment'\nimport passport from \"passport\";\nimport passportJWT from \"passport-jwt\";\nconst ExtractJwt = passportJWT.ExtractJwt;\nconst JwtStrategy = passportJWT.Strategy;\n\nconst jwtOptions = {\n\tjwtFromRequest: ExtractJwt.fromAuthHeader(),\n\tsecretOrKey:  config.jwtSecret\n}\n\nconst strategy = new JwtStrategy(jwtOptions, async (jwt_payload, next) => {\n\n\tconst { role, id } = jwt_payload\n\tswitch(role){\n\t\tcase 'player':\n\t\t\tconst user = await Player.findOneAndUpdate({ '_id': mongoose.Types.ObjectId(id) }, { $set: { lastOnline: moment() } }, 'agent superAgent account.username account.passcode account.role account.activate defaultSetting currentStatus')\n\t\t\tuser ? next(null, user) : next(null, false)\n\t\t\tbreak;\t\n\t\tcase 'agent':\n\t\t\tconst agent = await Agent.findOneAndUpdate({ '_id': mongoose.Types.ObjectId(id) }, { $set: { lastOnline: moment() } }, 'superAgent account.username account.passcode account.role account.activate defaultSetting currentStatus')\n\t\t\tagent ? next(null, agent) : next(null, false)\n\t\t\tbreak;\n\t\tcase 'superAgent':\n\t\t\tconst superAgent = await SuperAgent.findOne({ '_id': mongoose.Types.ObjectId(id) }, 'superAgent account.username account.passcode account.role')\n\t\t\tsuperAgent ? next(null, superAgent) : next(null, false)\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tnext(null, false)\n\t\t\treturn\n\t}\n\n});\n\nexport default strategy"]}