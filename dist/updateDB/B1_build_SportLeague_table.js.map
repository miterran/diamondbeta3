{"version":3,"sources":["../../src/updateDB/B1_build_SportLeague_table.js"],"names":["build_SportLeague_table","find","sportLeagueList","Promise","all","map","sportLeague","sport","eventOddList","leagues","addLeague","some","name","eventOdd","league","region","push","details","oddTypes","addOddType","findIndex","includes","oddType","findOneAndUpdate","$set","updatedAt","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;;;;;AAEA,IAAMA;AAAA,sDAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEA,sBAAYC,IAAZ,CAAiB,EAAjB,CAFA;;AAAA;AAExBC,qBAFwB;AAAA;AAAA,aAGxBC,QAAQC,GAAR,CAAYF,gBAAgBG,GAAhB;AAAA,6DAAoB,iBAAMC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACV,mBAASL,IAAT,CAAc,EAAEM,OAAOD,YAAYC,KAArB,EAAd,CADU;;AAAA;AAC/BC,wBAD+B;AAEjCC,mBAFiC,GAEvB,EAFuB;;AAGrCD,yBAAaH,GAAb,CAAiB,oBAAY;AAC5B,iBAAMK,YAAY,CAAC,iBAAEC,IAAF,CAAOF,OAAP,EAAgB,EAAEG,MAAMC,SAASC,MAAjB,EAAyBC,QAAQF,SAASE,MAA1C,EAAhB,CAAnB;AACAL,yBAAYD,QAAQO,IAAR,CAAa,EAAEJ,MAAMC,SAASC,MAAjB,EAAyBC,QAAQF,SAASE,MAA1C,EAAkDE,SAASJ,SAASI,OAApE,EAA6EC,UAAU,EAAvF,EAAb,CAAZ,GAAwH,IAAxH;AACA,iBAAMC,aAAa,CAACV,QAAQA,QAAQW,SAAR,CAAkB;AAAA,qBAAUN,OAAOF,IAAP,KAAgBC,SAASC,MAAzB,IAAmCA,OAAOC,MAAP,KAAkBF,SAASE,MAAxE;AAAA,cAAlB,CAAR,EAA2GG,QAA3G,CAAoHG,QAApH,CAA6HR,SAASS,OAAtI,CAApB;AACAH,0BAAaV,QAAQA,QAAQW,SAAR,CAAkB;AAAA,qBAAUN,OAAOF,IAAP,KAAgBC,SAASC,MAAzB,IAAmCA,OAAOC,MAAP,KAAkBF,SAASE,MAAxE;AAAA,cAAlB,CAAR,EAA2GG,QAA3G,CAAoHF,IAApH,CAAyHH,SAASS,OAAlI,CAAb,GAA0J,IAA1J;AACA,oBAAO,IAAP;AACA,aAND;AAHqC;AAAA,mBAU/B,sBAAYC,gBAAZ,CAA6B,EAAEhB,OAAOD,YAAYC,KAArB,EAA7B,EAA2D,EAAEiB,MAAM,EAAEf,SAASA,OAAX,EAAoBgB,WAAW,uBAA/B,EAAR,EAA3D,CAV+B;;AAAA;AAWrCC,oBAAQC,GAAR,cAAuBrB,YAAYC,KAAnC;AAXqC,6CAY9B,IAZ8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB;;AAAA;AAAA;AAAA;AAAA,UAAZ,CAHwB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAsBeP,uB","file":"B1_build_SportLeague_table.js","sourcesContent":["import SportLeague from '../models/SportLeague';\nimport { EventOdd } from '../models/EventOdd'\n\nimport moment from 'moment'\nimport _ from 'lodash'\n\nconst build_SportLeague_table = async () => {\n\ttry{\n\t\tconst sportLeagueList = await SportLeague.find({})\n\t\tawait Promise.all(sportLeagueList.map(async sportLeague => {\n\t\t\tconst eventOddList = await EventOdd.find({ sport: sportLeague.sport })\n\t\t\tlet leagues = []\n\t\t\teventOddList.map(eventOdd => {\n\t\t\t\tconst addLeague = !_.some(leagues, { name: eventOdd.league, region: eventOdd.region })\n\t\t\t\taddLeague ? leagues.push({ name: eventOdd.league, region: eventOdd.region, details: eventOdd.details, oddTypes: [] }) : null\n\t\t\t\tconst addOddType = !leagues[leagues.findIndex(league => league.name === eventOdd.league && league.region === eventOdd.region)].oddTypes.includes(eventOdd.oddType)\n\t\t\t\taddOddType ? leagues[leagues.findIndex(league => league.name === eventOdd.league && league.region === eventOdd.region)].oddTypes.push(eventOdd.oddType) : null\n\t\t\t\treturn null\n\t\t\t})\n\t\t\tawait SportLeague.findOneAndUpdate({ sport: sportLeague.sport }, { $set: { leagues: leagues, updatedAt: moment() }})\n\t\t\tconsole.log(`updated ${sportLeague.sport}`)\n\t\t\treturn null\n\t\t}))\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default build_SportLeague_table"]}