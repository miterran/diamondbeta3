{"version":3,"sources":["../../src/updateDB/C1_fetch_jsonOdd_result.js"],"names":["axiosJsonOdd","create","headers","jsonOddApiKey","fetch_jsonOdd_result","find","openBets","isEmpty","openBetJsonOddEvents","compact","uniqBy","concat","apply","map","openBet","eventOdds","event","status","source","provider","isAfter","cutOffTime","pick","forEach","console","log","uniqueId","Promise","all","get","id","oddType","response","oddResult","data","length","Object","assign","replace","response2","FinalType","resultStatus","note","newResult","sport","league","region","details","matchTime","team","score","homeScore","HomeScore","awayScore","AwayScore","expireAt","add","findOne","existedResult","save"],"mappings":"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","file":"C1_fetch_jsonOdd_result.js","sourcesContent":["import config from '../config';\nimport { OpenBet } from '../models/BetOrder';\nimport { Result } from '../models/EventOdd'\nimport moment from 'moment'\nimport _ from 'lodash'\n\nimport axios from 'axios'\nconst axiosJsonOdd = axios.create({ headers: {'JsonOdds-API-Key': config.jsonOddApiKey}})\n\nconst fetch_jsonOdd_result = async () => {\n\n\ttry{\n\t\tconst openBets = await OpenBet.find({})\n\t\tif(!_.isEmpty(openBets)){\n\t\t\tconst openBetJsonOddEvents = _.compact(_.uniqBy([].concat.apply([], openBets.map(openBet => {\n\t\t\t\treturn openBet.eventOdds.map(event => {\n\t\t\t\t\tif(event.status === 'Pending' && event.source.provider === 'jsonOdd' && moment().isAfter(event.cutOffTime) ){\n\t\t\t\t\t\treturn _.pick(event, [ 'sport', 'matchTime', 'details', 'league', 'region', 'status', 'team', 'source', 'oddType', 'uniqueId'])\n\t\t\t\t\t}\n\t\t\t\t\treturn null\n\t\t\t\t})\n\t\t\t})), 'uniqueId'))\n\n\t\t\tif(!_.isEmpty(openBetJsonOddEvents)){\n\t\t\t\topenBetJsonOddEvents.forEach(event => { console.log('fetch json result ' + event.uniqueId) })\n\t\t\t\tawait Promise.all(openBetJsonOddEvents.map(async event => {\n\t\t\t\t\tconst response = await axiosJsonOdd.get(`https://jsonodds.com/api/results/getbyeventid/${event.source.id}?oddtype=${event.oddType}`)\n\t\t\t\t\tlet oddResult = {}\n\t\t\t\t\tif(response.data.length > 0 && response.data.length === 1){\n\t\t\t\t\t\toddResult = Object.assign({}, response.data[0])\n\t\t\t\t\t}else if(response.data.length > 1){\n\t\t\t\t\t\tconst response2 = await axiosJsonOdd.get(`https://jsonodds.com/api/results/getbyeventid/${event.source.id}?oddtype=${event.oddType.replace(/\\s/g,'')}`)\n\t\t\t\t\t\tif(response2.data.length > 0 && response2.data.length === 1){\n\t\t\t\t\t\t\toddResult = Object.assign({}, response2.data[0])\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(_.isEmpty(response.data)){\n\t\t\t\t\t\tconsole.log(`error error error error error jsonOdd cannot get result from openbet event, response empty ${event.source.id} ${event.oddType}`)\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!_.isEmpty(oddResult) && oddResult.FinalType !== 'NotFinished'){\n\t\t\t\t\t\tlet resultStatus = ''\n\t\t\t\t\t\tlet note = ''\n\t\t\t\t\t\tswitch(oddResult.FinalType){\n\t\t\t\t\t\t\tcase 'Finished':\n\t\t\t\t\t\t\t\tresultStatus = 'Finished'\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Canceled':\n\t\t\t\t\t\t\t\tresultStatus = 'Canceled'\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Postponed':\n\t\t\t\t\t\t\t\tresultStatus = 'Postponed'\n\t\t\t\t\t\t\t\tnote = 'Postponed = Canceled'\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tresultStatus = 'Review'\n\t\t\t\t\t\t\t\tnote = 'Server Reviewing... TBD'\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newResult = {\n\t\t\t\t\t\t\tuniqueId: event.uniqueId,\n\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\tprovider: 'jsonOdd',\n\t\t\t\t\t\t\t\tid: event.source.id,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsport: event.sport,\n\t\t\t\t\t\t\toddType: event.oddType,\n\t\t\t\t\t\t\tleague: event.league,\n\t\t\t\t\t\t\tregion: event.region,\n\t\t\t\t\t\t\tdetails: event.details,\n\t\t\t\t\t\t\tmatchTime: event.matchTime,\n\t\t\t\t\t\t\tteam: event.team,\n\t\t\t\t\t\t\tscore:{\n\t\t\t\t\t\t\t\thomeScore: oddResult.HomeScore || 0,\n\t\t\t\t\t\t\t\tawayScore: oddResult.AwayScore || 0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstatus: resultStatus,\n\t\t\t\t\t\t\tnote: note,\n\t\t\t\t\t\t\texpireAt: moment().add(3, 'd')\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst existedResult = await Result.findOne({ uniqueId: event.uniqueId })\n\t\t\t\t\t\tif(_.isEmpty(existedResult)){\n\t\t\t\t\t\t\tawait new Result(newResult).save()\n\t\t\t\t\t\t\tconsole.log('saved jsonOdd new result ' + event.uniqueId)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}else{\n\t\t\t\t\t\tconsole.log(`json odd event ${event.uniqueId} not finish yet, skip save result`)\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\treturn null\n\t\t\t\t}))\n\t\t\t\n\t\t\t}else{\n\t\t\t\tconsole.log('use open bet event id to update json odd result, but open bet empty')\n\t\t\t}\n\n\t\t}\n\t}catch(err){\n\t\tthrow err\n\t}\n\n}\n\nexport default fetch_jsonOdd_result\n"]}