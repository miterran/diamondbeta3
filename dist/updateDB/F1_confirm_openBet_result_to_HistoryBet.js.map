{"version":3,"sources":["../../src/updateDB/F1_confirm_openBet_result_to_HistoryBet.js"],"names":["confirm_OpenBet_result_to_HistoryBet","find","openBets","isEmpty","Promise","all","map","openBet","orderType","straightBetResult","owner","player","toString","parlayBetResult","teaserBetResult","reverseBetResult","then","playerIds","playerIdArr","compact","uniq","console","log","playerId","agentId","agentIds","agentIdArr"],"mappings":"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","file":"F1_confirm_openBet_result_to_HistoryBet.js","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash';\n\nimport { OpenBet, HistoryBet } from '../models/BetOrder';\nimport updatePlayerStatusAfterOrder from './updateUser/updatePlayerStatusAfterOrder';\nimport updateAgentOpenBetStatusAfterOrder from './updateUser/updateAgentOpenBetStatusAfterOrder';\nimport confirmResultStraight from './confirmOrderTypeResult/confirmResultStraight'\nimport confirmResultParlay from './confirmOrderTypeResult/confirmResultParlay'\nimport confirmResultTeaser from './confirmOrderTypeResult/confirmResultTeaser'\nimport confirmResultReverse from './confirmOrderTypeResult/confirmResultReverse'\n\nconst confirm_OpenBet_result_to_HistoryBet = async () => {\n\n\ttry{\n\t\tconst openBets = await OpenBet.find({})\n\t\tif(!_.isEmpty(openBets)){\n\t\t\tawait Promise.all(openBets.map(async openBet => {\n\t\t\t\tswitch(openBet.orderType){\n\t\t\t\t\tcase 'Straight':\n\t\t\t\t\t\tconst straightBetResult = await confirmResultStraight(openBet)\n\t\t\t\t\t\tif(straightBetResult === true){\n\t\t\t\t\t\t\treturn openBet.owner.player.toString()\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Parlay':\n\t\t\t\t\t\tconst parlayBetResult = await confirmResultParlay(openBet)\n\t\t\t\t\t\tif(parlayBetResult === true){\n\t\t\t\t\t\t\treturn openBet.owner.player.toString()\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Teaser6040':\n\t\t\t\t\tcase 'Teaser6545':\n\t\t\t\t\tcase 'Teaser7050':\n\t\t\t\t\tcase 'SuperTeaser':\n\t\t\t\t\t\tconst teaserBetResult = await confirmResultTeaser(openBet)\n\t\t\t\t\t\tif(teaserBetResult === true){\n\t\t\t\t\t\t\treturn openBet.owner.player.toString()\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'WinReverse':\n\t\t\t\t\tcase 'ActionReverse':\n\t\t\t\t\t\tconst reverseBetResult = await confirmResultReverse(openBet)\n\t\t\t\t\t\tif(reverseBetResult === true){\n\t\t\t\t\t\t\treturn openBet.owner.player.toString()\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t})).then(async (playerIds) => {\n\t\t\t\tconst playerIdArr = _.compact(_.uniq(playerIds))\n\t\t\t\tif(!_.isEmpty(playerIdArr)){\n\t\t\t\t\tconsole.log('update following players ' + playerIdArr)\n\t\t\t\t\tawait Promise.all(playerIdArr.map(async playerId => {\n\t\t\t\t\t\tconst agentId = await updatePlayerStatusAfterOrder(playerId)\n\t\t\t\t\t\tconsole.log(agentId)\n\t\t\t\t\t\treturn agentId.toString()\n\t\t\t\t\t})).then(async agentIds => {\n\t\t\t\t\t\tconst agentIdArr = _.uniq(agentIds)\n\t\t\t\t\t\tconsole.log('update following agent ' + agentIdArr)\n\t\t\t\t\t\tawait Promise.all(agentIdArr.map(async agentId => {\n\t\t\t\t\t\t\tawait updateAgentOpenBetStatusAfterOrder(agentId)\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t}))\n\t\t\t\t\t})\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log('no players need to update')\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}catch(err){\n\t\tthrow err\n\t}\n\n}\n\nexport default confirm_OpenBet_result_to_HistoryBet\n"]}