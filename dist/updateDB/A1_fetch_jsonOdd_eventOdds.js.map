{"version":3,"sources":["../../src/updateDB/A1_fetch_jsonOdd_eventOdds.js"],"names":["axiosJsonOdd","create","headers","jsonOddApiKey","fetch_jsonOdd_eventOdds","find","provider","activate","jsonOddList","Promise","all","map","sportLeague","get","apiLink","events","isEmpty","data","console","log","league","event","isBefore","utc","MatchTime","subtract","format","Odds","odd","checkOddPoints","pick","allZero","Object","values","every","Number","val","newEventOdd","source","bookmaker","SiteID","toString","id","ID","lastUpdated","LastUpdated","sport","oddType","OddType","matchTime","cutOffTime","team","home","HomeTeam","homeROT","HomeROT","away","AwayTeam","awayROT","AwayROT","details","Details","odds","moneyLineHome","MoneyLineHome","moneyLineAway","MoneyLineAway","pointSpreadHome","PointSpreadHome","pointSpreadAway","PointSpreadAway","pointSpreadHomeLine","PointSpreadHomeLine","pointSpreadAwayLine","PointSpreadAwayLine","totalNumber","TotalNumber","overLine","OverLine","underLine","UnderLine","drawLine","DrawLine","updatedAt","expireAt","homePitcher","HomePitcher","awayPitcher","AwayPitcher","region","hasOwnProperty","League","Name","DisplayRegion","uniqueId","replace","toUpperCase","findOne","existedEventOdd","save","isSame","findOneAndUpdate","$set","catch","err","then"],"mappings":"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","file":"A1_fetch_jsonOdd_eventOdds.js","sourcesContent":["import config from '../config'\nimport Provider from '../models/Provider';\nimport { EventOdd } from '../models/EventOdd';\n\nimport _ from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\nconst axiosJsonOdd = axios.create({ headers: {'JsonOdds-API-Key': config.jsonOddApiKey}})\n\n\nconst fetch_jsonOdd_eventOdds = async () => {\n\ttry{\n\t\tconst jsonOddList = await Provider.find({ provider: 'jsonOdd', activate: true })\n\t\tawait Promise.all(jsonOddList.map(async sportLeague => {\n\t\t\tconst events = await axiosJsonOdd.get(sportLeague.apiLink)\n\t\t\tif(!_.isEmpty(events.data)){\n\t\t\t\tconsole.log(`jsonOdd ${sportLeague.league} has event`)\n\t\t\t\tawait Promise.all(events.data.map(async event => {\n\t\t\t\t\tif(moment().isBefore(moment.utc(event.MatchTime).subtract(1, 'seconds').format())) { \n\t\t\t\t\t\tawait Promise.all(event.Odds.map(async odd => {\n\t\t\t\t\t\t\tconst checkOddPoints = _.pick(odd, [\n\t\t\t\t\t\t\t\t'MoneyLineHome', \n\t\t\t\t\t\t\t\t'MoneyLineAway', \n\t\t\t\t\t\t\t\t'PointSpreadHome', \n\t\t\t\t\t\t\t\t'PointSpreadAway', \n\t\t\t\t\t\t\t\t'PointSpreadHomeLine', \n\t\t\t\t\t\t\t\t'PointSpreadAwayLine', \n\t\t\t\t\t\t\t\t'TotalNumber', \n\t\t\t\t\t\t\t\t'OverLine', \n\t\t\t\t\t\t\t\t'UnderLine',\n\t\t\t\t\t\t\t\t'DrawLine'])\n\t\t\t\t\t\t\tconst allZero = Object.values(checkOddPoints).every(val => Number(val) === 0)\n\t\t\t\t\t\t\tif(!allZero){\n\t\t\t\t\t\t\t\tlet newEventOdd = {\n//\t\t\t\t\t\t\t\t\teventOddId: `jsonOdd_${sportLeague.league}_${odd.OddType.replace(/\\s/g,'').toUpperCase()}_${event.ID}`,\n\t\t\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\t\t\tprovider: `jsonOdd`,\n\t\t\t\t\t\t\t\t\t\tbookmaker: odd.SiteID.toString(),\n\t\t\t\t\t\t\t\t\t\tid: event.ID,\n\t\t\t\t\t\t\t\t\t\tlastUpdated: moment.utc(odd.LastUpdated)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsport: sportLeague.sport,\n\t\t\t\t\t\t\t\t\toddType: odd.OddType,\n\t\t\t\t\t\t\t\t\tmatchTime: moment.utc(event.MatchTime),\n\t\t\t\t\t\t\t\t\tcutOffTime: moment.utc(event.MatchTime).subtract(1, 'seconds'),\n\t\t\t\t\t\t\t\t\tteam: {\n\t\t\t\t\t\t\t\t\t\thome: event.HomeTeam,\n\t\t\t\t\t\t\t\t\t\thomeROT: event.HomeROT,\n\t\t\t\t\t\t\t\t\t\taway: event.AwayTeam,\n\t\t\t\t\t\t\t\t\t\tawayROT: event.AwayROT\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdetails: event.Details || '',\n\t\t\t\t\t\t\t\t\todds: {\n\t\t\t\t\t\t\t\t\t\tmoneyLineHome: Number(odd.MoneyLineHome) || 0,\n\t\t\t\t\t\t\t\t\t\tmoneyLineAway: Number(odd.MoneyLineAway) || 0,\n\t\t\t\t\t\t\t\t\t\tpointSpreadHome: Number(odd.PointSpreadHome) || 0,\n\t\t\t\t\t\t\t\t\t\tpointSpreadAway: Number(odd.PointSpreadAway) || 0,\n\t\t\t\t\t\t\t\t\t\tpointSpreadHomeLine: Number(odd.PointSpreadHomeLine) || 0,\n\t\t\t\t\t\t\t\t\t\tpointSpreadAwayLine: Number(odd.PointSpreadAwayLine) || 0,\n\t\t\t\t\t\t\t\t\t\ttotalNumber: Number(odd.TotalNumber) || 0,\n\t\t\t\t\t\t\t\t\t\toverLine: Number(odd.OverLine) || 0,\n\t\t\t\t\t\t\t\t\t\tunderLine: Number(odd.UnderLine) || 0,\n\t\t\t\t\t\t\t\t\t\tdrawLine: Number(odd.DrawLine) || 0\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tupdatedAt: moment(),\n\t\t\t\t\t\t\t\t\texpireAt: moment.utc(event.MatchTime).subtract(1, 'seconds')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(sportLeague.sport === 'Baseball'){\n\t\t\t\t\t\t\t\t\tnewEventOdd.team.homePitcher = event.HomePitcher || 'Action'\n\t\t\t\t\t\t\t\t\tnewEventOdd.team.awayPitcher = event.AwayPitcher || 'Action'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(sportLeague.sport !== 'Soccer'){\n\t\t\t\t\t\t\t\t\tnewEventOdd.league = sportLeague.league\n\t\t\t\t\t\t\t\t\tnewEventOdd.region = ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(sportLeague.sport === 'Soccer'){\n\t\t\t\t\t\t\t\t\tif(event.hasOwnProperty('League')){\n\t\t\t\t\t\t\t\t\t\tif(event.League.hasOwnProperty('Name')){\n\t\t\t\t\t\t\t\t\t\t\tnewEventOdd.league = event.League.Name\n\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\tnewEventOdd.league = '-'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.league = '-'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnewEventOdd.region = event.DisplayRegion\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewEventOdd.uniqueId = `${newEventOdd.team.homeROT}_${newEventOdd.team.awayROT}_${newEventOdd.sport.replace(/\\s/g,'').toUpperCase()}_${newEventOdd.oddType.replace(/\\s/g,'').toUpperCase()}_${moment(newEventOdd.matchTime).format('MMDDYYYY')}`\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst existedEventOdd = await EventOdd.findOne({ uniqueId: newEventOdd.uniqueId })\n\t\t\t\t\t\t\t\tif(_.isEmpty(existedEventOdd)){\n\t\t\t\t\t\t\t\t\tawait new EventOdd(newEventOdd).save()\n\t\t\t\t\t\t\t\t\tconsole.log(`saved ${newEventOdd.uniqueId}`)\n\t\t\t\t\t\t\t\t}else if(!moment(existedEventOdd.source.lastUpdated).isSame(moment(newEventOdd.source.lastUpdated).format())){\n\t\t\t\t\t\t\t\t\tawait EventOdd.findOneAndUpdate({ uniqueId: newEventOdd.uniqueId }, { $set: newEventOdd })\n\t\t\t\t\t\t\t\t\tconsole.log(`updated ${newEventOdd.uniqueId}`)\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tconsole.log(`${newEventOdd.uniqueId} is up to date`)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t})).catch(err => {  throw err })\n\t\t\t\t\t}\n\t\t\t\t\treturn null\n\t\t\t\t})).then(async () => {\n\t\t\t\t\t// await ProviderJsonOdd.findOneAndUpdate({ _id: sportLeague._id }, { $set: { updatedAt: moment() }})\n\t\t\t\t\t// console.log(`jsonOdd ${sportLeague.league} updated time`)\n\t\t\t\t}).catch(err => {  throw err })\n\t\t\t}else{\n\t\t\t\tconsole.log(`jsonOdd ${sportLeague.league} has no event`)\n\t\t\t}\n\t\t\treturn null\n\t\t})).then(() => {\n\t\t\tconsole.log(`jsonOdd Event Update Done`)\n\t\t}).catch(err => { throw err })\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default fetch_jsonOdd_eventOdds"]}