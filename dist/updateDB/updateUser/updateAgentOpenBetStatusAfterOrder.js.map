{"version":3,"sources":["../../../src/updateDB/updateUser/updateAgentOpenBetStatusAfterOrder.js"],"names":["updateAgentOpenBetStatusAfterOrder","AgentId","findOne","_id","Types","ObjectId","agent","find","agentOpenBets","agentCreditPending","reduce","total","openBet","wagerDetail","winAmount","activePlayerCounter","uniq","map","owner","player","toString","straightBetCounter","orderType","parlayBetCounter","teaserBetCounter","reverseBetCounter","totalRisk","Number","riskAmount","totalWin","agentCurrentStatus","credit","currentStatus","creditPending","availableCredit","agentOpenBetStatus","activePlayer","length","straightBet","parlayBet","teaserBet","reverseBet","totalBets","findOneAndUpdate","openBetStatus","new","then","console","log","agentUpdated"],"mappings":"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","file":"updateAgentOpenBetStatusAfterOrder.js","sourcesContent":["import Agent from '../../models/Agent';\nimport Player from '../../models/Player'\nimport { OpenBet, HistoryBet } from '../../models/BetOrder';\nimport moment from 'moment'\nimport mongoose from 'mongoose'\nimport _ from 'lodash'\n// update agent current status every time order changed\nconst updateAgentOpenBetStatusAfterOrder = async (AgentId) => {\n\n\ttry {\n\n\t\tconst agent = await Agent.findOne({ _id: mongoose.Types.ObjectId(AgentId) }, 'currentStatus')\n\t\tconst agentOpenBets = await OpenBet.find({ 'owner.agent': mongoose.Types.ObjectId(AgentId) }, 'orderType wagerDetail wagerDetail owner')\n\n\t\tconst agentCreditPending = agentOpenBets.reduce((total, openBet) => total + openBet.wagerDetail.winAmount, 0)\n\t\tconst activePlayerCounter = _.uniq(agentOpenBets.map(openBet => openBet.owner.player.toString()))\n\n\t\tconst straightBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Straight' ), 0)\n\t\tconst parlayBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Parlay' ), 0)\n\t\tconst teaserBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Teaser6040' || openBet.orderType === 'Teaser6545' || openBet.orderType === 'Teaser7050' || openBet.orderType === 'SuperTeaser' ), 0)  // indexOf\n\t\tconst reverseBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'ActionReverse' || openBet.orderType === 'WinReverse' ), 0)\n\t\tconst totalRisk = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.riskAmount), 0)\n\t\tconst totalWin = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.winAmount), 0)\n\n\t\tconst agentCurrentStatus = {\n\t\t\tcredit: agent.currentStatus.credit,\n\t\t\tcreditPending: agentCreditPending,\n\t\t\tavailableCredit: Number(agent.currentStatus.credit) - Number(agentCreditPending)\n\t\t}\n\n\t\tconst agentOpenBetStatus = {\n\t\t\tactivePlayer: activePlayerCounter.length,\n\t\t\tstraightBet: straightBetCounter || 0,\n\t\t\tparlayBet: parlayBetCounter || 0,\n\t\t\tteaserBet: teaserBetCounter || 0,\n\t\t\treverseBet: reverseBetCounter || 0,\n\t\t\ttotalBets: agentOpenBets.length || 0,\n\t\t\ttotalRisk: totalRisk || 0,\n\t\t\ttotalWin: totalWin || 0\n\t\t}\n\n\t\tawait Agent.findOneAndUpdate({ _id:mongoose.Types.ObjectId(AgentId) }, {'$set': { currentStatus: agentCurrentStatus, openBetStatus: agentOpenBetStatus }}, { new: true }).then(agentUpdated => {\n\t\t\tconsole.log('update agent status ' + agentUpdated)\n\t\t})\n\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default updateAgentOpenBetStatusAfterOrder\n\n\n"]}