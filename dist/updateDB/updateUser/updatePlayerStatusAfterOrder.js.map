{"version":3,"sources":["../../../src/updateDB/updateUser/updatePlayerStatusAfterOrder.js"],"names":["updatePlayerStatusAfterOrder","playerId","findOne","_id","Types","ObjectId","populate","path","select","player","find","playerOpenBets","$gte","startOf","$lte","endOf","playerHistoryBets","playerCreditPending","reduce","total","openBet","wagerDetail","riskAmount","playerCurrentBalance","historyBet","resultAmount","straightBetCounter","orderType","parlayBetCounter","teaserBetCounter","reverseBetCounter","totalRisk","Number","totalWin","winAmount","playerCurrentStatus","creditPending","currentBalance","availableCredit","defaultSetting","weeklyStartCredit","playerOpenBetStatus","straightBet","parlayBet","teaserBet","reverseBet","totalBets","length","findOneAndUpdate","currentStatus","openBetStatus","new","then","console","log","result","agent"],"mappings":"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","file":"updatePlayerStatusAfterOrder.js","sourcesContent":["import Player from '../../models/Player';\nimport { OpenBet, HistoryBet } from '../../models/BetOrder';\nimport moment from 'moment'\nimport mongoose from 'mongoose'\n\nconst updatePlayerStatusAfterOrder = async (playerId) => {\n\n\ttry {\n\t\t\n\t\tconst player = await Player.findOne({ _id: mongoose.Types.ObjectId(playerId) }, 'defaultSetting.weeklyStartCredit agent').populate({ path: 'agent', select: '_id' })\n\n\t\tconst playerOpenBets = await OpenBet.find({ 'owner.player': mongoose.Types.ObjectId(playerId) }, 'orderType wagerDetail.riskAmount wagerDetail.winAmount')\n\t\tconst playerHistoryBets = await HistoryBet.find({ 'owner.player': mongoose.Types.ObjectId(playerId), 'closedAt': {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek')} }, 'closedAt resultAmount')\n\t\tconst playerCreditPending = playerOpenBets.reduce((total, openBet) => total + openBet.wagerDetail.riskAmount, 0)\n\t\tconst playerCurrentBalance = playerHistoryBets.reduce((total, historyBet) => total + historyBet.resultAmount ,0)\n\n\t\tconst straightBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Straight' ), 0)\n\t\tconst parlayBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Parlay' ), 0)\n\t\tconst teaserBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Teaser6040' || openBet.orderType === 'Teaser6545' || openBet.orderType === 'Teaser7050' || openBet.orderType === 'SuperTeaser' ), 0)\n\t\tconst reverseBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'ActionReverse' || openBet.orderType === 'WinReverse' ), 0)\n\t\tconst totalRisk = playerOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.riskAmount), 0)\n\t\tconst totalWin = playerOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.winAmount), 0)\n\n\t\tconst playerCurrentStatus = {\n\t\t\tcreditPending: playerCreditPending,\n\t\t\tcurrentBalance: playerCurrentBalance,\n\t\t\tavailableCredit: Number(player.defaultSetting.weeklyStartCredit) - Number(playerCreditPending) + Number(playerCurrentBalance)\n\t\t}\n\t\t\n\t\tconst playerOpenBetStatus = {\n\t\t\tstraightBet: straightBetCounter || 0,\n\t\t\tparlayBet: parlayBetCounter || 0,\n\t\t\tteaserBet: teaserBetCounter || 0,\n\t\t\treverseBet: reverseBetCounter || 0,\n\t\t\ttotalBets: playerOpenBets.length || 0,\n\t\t\ttotalRisk: totalRisk || 0,\n\t\t\ttotalWin: totalWin || 0\n\t\t}\n\n\t\tawait Player.findOneAndUpdate({ _id: mongoose.Types.ObjectId(playerId) }, {'$set': { currentStatus: playerCurrentStatus, openBetStatus: playerOpenBetStatus }}, {new: true}).then(result => {\n\t\t\tconsole.log(result)\n\t\t})\n\t\tconsole.log('update this agent id ' + player.agent._id)\n\t\treturn player.agent._id\n\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default updatePlayerStatusAfterOrder\n\n\n\n\n"]}