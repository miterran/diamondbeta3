{"version":3,"sources":["../../../src/updateDB/utils/updatePlayerStatusAfterOrder.js"],"names":["updatePlayerStatusAfterOrder","playerId","findOne","_id","Types","ObjectId","player","find","playerOpenBets","$gte","startOf","$lte","endOf","playerHistoryBets","playerCreditPending","reduce","total","openBet","wagerDetail","riskAmount","playerCurrentBalance","historyBet","resultAmount","playerCurrentStatus","creditPending","currentBalance","availableCredit","Number","defaultSetting","weeklyStartCredit","findOneAndUpdate","currentStatus","new","then","console","log","result"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;;;AACA;AACA,IAAMA;AAAA,sDAA+B,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGd,iBAAOC,OAAP,CAAe,EAAEC,KAAK,mBAASC,KAAT,CAAeC,QAAf,CAAwBJ,QAAxB,CAAP,EAAf,EAA2D,kCAA3D,CAHc;;AAAA;AAG7BK,YAH6B;AAAA;AAAA,aAKN,kBAAQC,IAAR,CAAa,EAAE,gBAAgB,mBAASH,KAAT,CAAeC,QAAf,CAAwBJ,QAAxB,CAAlB,EAAb,EAAoE,wDAApE,CALM;;AAAA;AAK7BO,oBAL6B;AAAA;AAAA,aAMH,qBAAWD,IAAX,CAAgB,EAAE,gBAAgB,mBAASH,KAAT,CAAeC,QAAf,CAAwBJ,QAAxB,CAAlB,EAAqD,YAAY,EAACQ,MAAM,wBAASC,OAAT,CAAiB,SAAjB,CAAP,EAAoCC,MAAM,wBAASC,KAAT,CAAe,SAAf,CAA1C,EAAjE,EAAhB,EAAyJ,uBAAzJ,CANG;;AAAA;AAM7BC,uBAN6B;AAO7BC,yBAP6B,GAOPN,eAAeO,MAAf,CAAsB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,QAAQC,QAAQC,WAAR,CAAoBC,UAAhD;AAAA,OAAtB,EAAkF,CAAlF,CAPO;AAQ7BC,0BAR6B,GAQNP,kBAAkBE,MAAlB,CAAyB,UAACC,KAAD,EAAQK,UAAR;AAAA,cAAuBL,QAAQK,WAAWC,YAA1C;AAAA,OAAzB,EAAiF,CAAjF,CARM;AAU7BC,yBAV6B,GAUP;AAC3BC,sBAAeV,mBADY;AAE3BW,uBAAgBL,oBAFW;AAG3BM,wBAAiBC,OAAOrB,OAAOsB,cAAP,CAAsBC,iBAA7B,IAAkDF,OAAOb,mBAAP,CAAlD,GAAgFa,OAAOP,oBAAP;AAHtE,OAVO;AAAA;AAAA,aAgB7B,iBAAOU,gBAAP,CAAwB,EAAE3B,KAAK,mBAASC,KAAT,CAAeC,QAAf,CAAwBJ,QAAxB,CAAP,EAAxB,EAAoE,EAAC,QAAQ,EAAE8B,eAAeR,mBAAjB,EAAT,EAApE,EAAsH,EAACS,KAAK,IAAN,EAAtH,EAAmIC,IAAnI,CAAwI,kBAAU;AACvJC,eAAQC,GAAR,CAAYC,MAAZ;AACA,OAFK,CAhB6B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA/B;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAyBepC,4B","file":"updatePlayerStatusAfterOrder.js","sourcesContent":["import Player from '../../models/Player';\nimport { OpenBet, HistoryBet } from '../../models/BetOrder';\nimport moment from 'moment'\nimport mongoose from 'mongoose'\n// update player current status every time order changed\nconst updatePlayerStatusAfterOrder = async (playerId) => {\n\n\ttry {\n\t\tconst player = await Player.findOne({ _id: mongoose.Types.ObjectId(playerId) }, 'defaultSetting.weeklyStartCredit')\n\n\t\tconst playerOpenBets = await OpenBet.find({ 'owner.player': mongoose.Types.ObjectId(playerId) }, 'orderType wagerDetail.riskAmount wagerDetail.winAmount')\n\t\tconst playerHistoryBets = await HistoryBet.find({ 'owner.player': mongoose.Types.ObjectId(playerId), 'closedAt': {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek')} }, 'closedAt resultAmount')\n\t\tconst playerCreditPending = playerOpenBets.reduce((total, openBet) => total + openBet.wagerDetail.riskAmount, 0)\n\t\tconst playerCurrentBalance = playerHistoryBets.reduce((total, historyBet) => total + historyBet.resultAmount ,0)\n\n\t\tconst playerCurrentStatus = {\n\t\t\tcreditPending: playerCreditPending,\n\t\t\tcurrentBalance: playerCurrentBalance,\n\t\t\tavailableCredit: Number(player.defaultSetting.weeklyStartCredit) - Number(playerCreditPending) + Number(playerCurrentBalance)\n\t\t}\n\t\t\n\t\tawait Player.findOneAndUpdate({ _id: mongoose.Types.ObjectId(playerId) }, {'$set': { currentStatus: playerCurrentStatus }}, {new: true}).then(result => {\n\t\t\tconsole.log(result)\n\t\t})\n\t\t\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default updatePlayerStatusAfterOrder\n\n"]}