{"version":3,"sources":["../../src/updateDB/A2_fetch_pickMon_eventOdds.js"],"names":["fetch_pickMon_eventOdds","findOne","provider","activate","pickMonApi","get","apiLink","pickMon_UID","pickMon_Key","option","sportLeagues","join","eventFullCall","response","isEmpty","data","explicitArray","pickMonData","lines","game","Promise","all","map","event","header","line","score","winner","isBefore","wagercutoff","subtract","format","void","team1","name","includes","newEventOdd","source","bookmaker","id","lastUpdated","last_update","sport","sporttype","matchTime","gamedate","team","home","homeROT","rotnum","away","team2","awayROT","details","odds","moneyLineHome","Number","money","moneyLineAway","pointSpreadAway","spread","points","pointSpreadHomeLine","pointSpreadAwayLine","totalNumber","total","overLine","over","underLine","under","drawLine","draw","updatedAt","pointSpreadHome","Math","abs","homePitcher","pitcher","awayPitcher","league","sportsubtype","region","perioddesc","oddType","cutOffTime","expireAt","eventOddId","replace","toUpperCase","uniqueId","existedEventOdd","save","console","log","isSame","findOneAndUpdate","$set"],"mappings":"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","file":"A2_fetch_pickMon_eventOdds.js","sourcesContent":["import config from '../config'\nimport Provider from '../models/Provider';\nimport { EventOdd, Result } from '../models/EventOdd';\nimport { OpenBet } from '../models/BetOrder';\nimport _ from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\nimport xml2js from'xml2js-es6-promise'\n\nconst fetch_pickMon_eventOdds = async () => {\n \ttry{\n \t\tconst pickMonApi = await Provider.findOne({ provider: 'pickMon', activate: true })\n\n \t\tif(pickMonApi){\n\t\t \tconst response = await axios.get(`${pickMonApi.apiLink}uid=${config.pickMon_UID}&key=${config.pickMon_Key}&sports=${pickMonApi.option.sportLeagues.join(',')}&graded=0&full_call=${pickMonApi.option.eventFullCall}`)\n\t\t \tif(!_.isEmpty(response.data)){\n\t\t \t\tconst pickMonData = await xml2js(response.data, {explicitArray: false})\n\t\t\t \tif(!_.isEmpty(pickMonData.lines) && !_.isEmpty(pickMonData.lines.game) ){\n\t\t\t\t\tawait Promise.all(pickMonData.lines.game.map(async event => {\n\t\t\t\t \t\tif( event.header && !event.line.score.winner && moment().isBefore(moment(event.line.wagercutoff).subtract(3, 'h').format()) && event.void === '0' && (!event.team1.name.includes('/') || !event.team1.name.includes('/'))){\n\n\t\t\t\t\t\t\tlet newEventOdd = {\n\t\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\t\tprovider: `pickMon`,\n\t\t\t\t\t\t\t\t\tbookmaker: `default`,\n\t\t\t\t\t\t\t\t\tid: event.id,\n\t\t\t\t\t\t\t\t\tlastUpdated: moment(event.last_update).subtract(3, 'h')\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsport: event.sporttype,\n\t\t\t\t\t\t\t\tmatchTime: moment(event.gamedate).subtract(3, 'h'),\n\t\t\t\t\t\t\t\tteam: {\n\t\t\t\t\t\t\t\t\thome: event.team1.name,\n\t\t\t\t\t\t\t\t\thomeROT: event.team1.rotnum,\n\t\t\t\t\t\t\t\t\taway: event.team2.name,\n\t\t\t\t\t\t\t\t\tawayROT: event.team2.rotnum\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdetails: event.header || '',\n\t\t\t\t\t\t\t\todds: {\n\t\t\t\t\t\t\t\t\tmoneyLineHome: Number(event.line.money.team1) || 0,\n\t\t\t\t\t\t\t\t\tmoneyLineAway: Number(event.line.money.team2) || 0,\n\t\t\t\t\t\t\t\t\tpointSpreadAway: Number(event.line.spread.points) || 0,\n\t\t\t\t\t\t\t\t\tpointSpreadHomeLine: Number(event.line.spread.team1) || 0,\n\t\t\t\t\t\t\t\t\tpointSpreadAwayLine: Number(event.line.spread.team2) || 0,\n\t\t\t\t\t\t\t\t\ttotalNumber: Number(event.line.total.points) || 0,\n\t\t\t\t\t\t\t\t\toverLine: Number(event.line.total.over) || 0,\n\t\t\t\t\t\t\t\t\tunderLine: Number(event.line.total.under) || 0,\n\t\t\t\t\t\t\t\t\tdrawLine: Number(event.line.money.draw) || 0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tupdatedAt: moment(),\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(Number(event.line.spread.points) > 0){\n\t\t\t\t\t\t\t\tnewEventOdd.odds.pointSpreadHome = -Number(event.line.spread.points)\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnewEventOdd.odds.pointSpreadHome = Math.abs(Number(event.line.spread.points))\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(event.sporttype === 'Baseball'){\n\t\t\t\t\t\t\t\tnewEventOdd.team.homePitcher = event.team1.pitcher || 'Action'\n\t\t\t\t\t\t\t\tnewEventOdd.team.awayPitcher = event.team2.pitcher || 'Action'\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(event.sporttype !== 'Soccer'){\n\t\t\t\t\t\t\t\tnewEventOdd.league = event.sportsubtype\n\t\t\t\t\t\t\t\tnewEventOdd.region = ''\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(event.sporttype === 'Soccer'){\n\t\t\t\t\t\t\t\tnewEventOdd.league = ''\n\t\t\t\t\t\t\t\tnewEventOdd.region = event.sportsubtype\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch(event.line.perioddesc){\n\t\t\t\t\t\t\t\tcase 'Game':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Game';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '1st Half':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'First Half';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '2nd Half':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Second Half';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '1st Quarter':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'First Quarter';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '2nd Quarter':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Second Quarter';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '3rd Quarter':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Third Quarter';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '3rd Quarter':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Third Quarter';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase '1st 5 Innings':\n\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'First Five Innings';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(newEventOdd.oddType === 'Game'){\n\t\t\t\t\t\t\t\tnewEventOdd.cutOffTime = moment(event.gamedate).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t\tnewEventOdd.expireAt = moment(event.gamedate).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnewEventOdd.cutOffTime = moment(event.line.wagercutoff).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t\tnewEventOdd.expireAt = moment(event.line.wagercutoff).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnewEventOdd.eventOddId = `pickMon_${event.sportsubtype}_${newEventOdd.oddType.replace(/\\s/g,'').toUpperCase()}_${event.id}`,\n\t\t\t\t\t\t\tnewEventOdd.uniqueId = `${newEventOdd.team.homeROT}_${newEventOdd.team.awayROT}_${newEventOdd.sport.replace(/\\s/g,'').toUpperCase()}_${newEventOdd.oddType.replace(/\\s/g,'').toUpperCase()}_${moment(newEventOdd.matchTime).format('MMDDYYYY')}`\n\n\t\t\t\t \t\t\tconst existedEventOdd = await EventOdd.findOne({ eventOddId: newEventOdd.eventOddId })\n\t\t\t\t\t\t\tif(_.isEmpty(existedEventOdd)){\n\t\t\t\t\t\t\t\tawait new EventOdd(newEventOdd).save()\n\t\t\t\t\t\t\t\tconsole.log(`saved ${newEventOdd.eventOddId}`)\n\t\t\t\t\t\t\t}else if(!moment(existedEventOdd.source.lastUpdated).isSame(moment(newEventOdd.source.lastUpdated).format())){\n\t\t\t\t\t\t\t\tawait EventOdd.findOneAndUpdate({ eventOddId: newEventOdd.eventOddId }, { $set: newEventOdd })\n\t\t\t\t\t\t\t\tconsole.log(`updated ${newEventOdd.eventOddId}`)\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tconsole.log(`${newEventOdd.eventOddId} is up to date`)\n\t\t\t\t\t\t\t}\n\t\t\t\t \t\t}\n\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}))\t\t \t\t\n\t\t\t \t}else{\n\t\t \t\tconsole.log('pickmon has no update')\n\t\t \t\t}\n\t\t \t}\n \t\t}\n \t}catch(err){\n \t\tthrow err\n \t}\n}\n\nexport default fetch_pickMon_eventOdds"]}