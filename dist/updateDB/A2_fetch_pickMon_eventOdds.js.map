{"version":3,"sources":["../../src/updateDB/A2_fetch_pickMon_eventOdds.js"],"names":["fetch_pickMon_eventOdds","findOne","provider","activate","pickMonApi","get","apiLink","pickMon_UID","pickMon_Key","option","sportLeagues","join","eventFullCall","response","isEmpty","data","explicitArray","pickMonData","lines","game","isFunction","map","Promise","all","event","header","line","score","winner","isBefore","wagercutoff","subtract","format","void","team1","name","includes","team2","newEventOdd","source","bookmaker","id","lastUpdated","last_update","sport","sporttype","matchTime","gamedate","team","home","homeROT","rotnum","away","awayROT","details","odds","moneyLineHome","Number","money","moneyLineAway","pointSpreadAway","spread","points","pointSpreadHomeLine","pointSpreadAwayLine","totalNumber","total","overLine","over","underLine","under","drawLine","draw","updatedAt","checkOddPoints","pick","allZero","Object","values","every","val","pointSpreadHome","Math","abs","homePitcher","pitcher","awayPitcher","league","sportsubtype","region","perioddesc","oddType","console","log","cutOffTime","expireAt","uniqueId","replace","toUpperCase","existedEventOdd","save","isSame","findOneAndUpdate","$set"],"mappings":"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","file":"A2_fetch_pickMon_eventOdds.js","sourcesContent":["import config from '../config'\nimport Provider from '../models/Provider';\nimport { EventOdd, Result } from '../models/EventOdd';\nimport { OpenBet } from '../models/BetOrder';\nimport _ from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\nimport xml2js from'xml2js-es6-promise'\n\nconst fetch_pickMon_eventOdds = async () => {\n \ttry{\n \t\tconst pickMonApi = await Provider.findOne({ provider: 'pickMon', activate: true })\n\n \t\tif(pickMonApi){\n\t\t \tconst response = await axios.get(`${pickMonApi.apiLink}uid=${config.pickMon_UID}&key=${config.pickMon_Key}&sports=${pickMonApi.option.sportLeagues.join(',')}&graded=0&full_call=${pickMonApi.option.eventFullCall}`)\n\t\t \tif(!_.isEmpty(response.data)){\n\t\t \t\tconst pickMonData = await xml2js(response.data, {explicitArray: false})\n\t\t\t \tif(!_.isEmpty(pickMonData.lines) && !_.isEmpty(pickMonData.lines.game) && _.isFunction(pickMonData.lines.game.map)){\n\t\t\t\t\tawait Promise.all(pickMonData.lines.game.map(async event => {\n\t\t\t\t \t\tif( event.header && !event.line.score.winner && moment().isBefore(moment(event.line.wagercutoff).subtract(3, 'h').format()) && event.void === '0' && (!event.team1.name.includes('/') || !event.team2.name.includes('/'))){\n\n\t\t\t\t\t\t\tlet newEventOdd = {\n\t\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\t\tprovider: `pickMon`,\n\t\t\t\t\t\t\t\t\tbookmaker: `default`,\n\t\t\t\t\t\t\t\t\tid: event.id,\n\t\t\t\t\t\t\t\t\tlastUpdated: moment(event.last_update).subtract(3, 'h')\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsport: event.sporttype,\n\t\t\t\t\t\t\t\tmatchTime: moment(event.gamedate).subtract(3, 'h'),\n\t\t\t\t\t\t\t\tteam: {\n\t\t\t\t\t\t\t\t\thome: event.team1.name,\n\t\t\t\t\t\t\t\t\thomeROT: event.team1.rotnum,\n\t\t\t\t\t\t\t\t\taway: event.team2.name,\n\t\t\t\t\t\t\t\t\tawayROT: event.team2.rotnum\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdetails: event.header || '',\n\t\t\t\t\t\t\t\todds: {\n\t\t\t\t\t\t\t\t\tmoneyLineHome: Number(event.line.money.team1) || 0,\n\t\t\t\t\t\t\t\t\tmoneyLineAway: Number(event.line.money.team2) || 0,\n\t\t\t\t\t\t\t\t\tpointSpreadAway: Number(event.line.spread.points) || 0,\n\t\t\t\t\t\t\t\t\tpointSpreadHomeLine: Number(event.line.spread.team1) || 0,\n\t\t\t\t\t\t\t\t\tpointSpreadAwayLine: Number(event.line.spread.team2) || 0,\n\t\t\t\t\t\t\t\t\ttotalNumber: Number(event.line.total.points) || 0,\n\t\t\t\t\t\t\t\t\toverLine: Number(event.line.total.over) || 0,\n\t\t\t\t\t\t\t\t\tunderLine: Number(event.line.total.under) || 0,\n\t\t\t\t\t\t\t\t\tdrawLine: Number(event.line.money.draw) || 0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tupdatedAt: moment(),\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst checkOddPoints = _.pick(newEventOdd.odds, [\n\t\t\t\t\t\t\t\t'moneyLineHome', \n\t\t\t\t\t\t\t\t'moneyLineAway', \n\t\t\t\t\t\t\t\t'pointSpreadHome',\n\t\t\t\t\t\t\t\t'pointSpreadAway',\n\t\t\t\t\t\t\t\t'pointSpreadHomeLine',\n\t\t\t\t\t\t\t\t'pointSpreadAwayLine',\n\t\t\t\t\t\t\t\t'totalNumber',\n\t\t\t\t\t\t\t\t'overLine',\n\t\t\t\t\t\t\t\t'underLine',\n\t\t\t\t\t\t\t\t'drawLine'])\n\n\t\t\t\t\t\t\tconst allZero = Object.values(checkOddPoints).every(val => Number(val) === 0)\n\n\t\t\t\t\t\t\tif(!allZero){\n\n\t\t\t\t\t\t\t\tif(Number(event.line.spread.points) > 0){\n\t\t\t\t\t\t\t\t\tnewEventOdd.odds.pointSpreadHome = -Number(event.line.spread.points)\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tnewEventOdd.odds.pointSpreadHome = Math.abs(Number(event.line.spread.points))\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(event.sporttype === 'Baseball'){\n\t\t\t\t\t\t\t\t\tnewEventOdd.team.homePitcher = event.team1.pitcher || 'Action'\n\t\t\t\t\t\t\t\t\tnewEventOdd.team.awayPitcher = event.team2.pitcher || 'Action'\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(event.sporttype !== 'Soccer'){\n\t\t\t\t\t\t\t\t\tnewEventOdd.league = event.sportsubtype\n\t\t\t\t\t\t\t\t\tnewEventOdd.region = ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(event.sporttype === 'Soccer'){\n\t\t\t\t\t\t\t\t\tnewEventOdd.league = ''\n\t\t\t\t\t\t\t\t\tnewEventOdd.region = event.sportsubtype\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tswitch(event.line.perioddesc){\n\t\t\t\t\t\t\t\t\tcase 'Game':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Game';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '1st Half':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'First Half';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '2nd Half':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Second Half';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '1st Quarter':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'First Quarter';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '2nd Quarter':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Second Quarter';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '3rd Quarter':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Third Quarter';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '3rd Quarter':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'Third Quarter';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase '1st 5 Innings':\n\t\t\t\t\t\t\t\t\t\tnewEventOdd.oddType = 'First Five Innings';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tconsole.log('new event !!!!!!!!!!!!!!!! ' + event.line.perioddesc)\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(newEventOdd.oddType === 'Game'){\n\t\t\t\t\t\t\t\t\tnewEventOdd.cutOffTime = moment(event.gamedate).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t\t\tnewEventOdd.expireAt = moment(event.gamedate).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tnewEventOdd.cutOffTime = moment(event.line.wagercutoff).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t\t\tnewEventOdd.expireAt = moment(event.line.wagercutoff).subtract(3, 'h').subtract(1, 's')\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewEventOdd.uniqueId = `${newEventOdd.team.homeROT}_${newEventOdd.team.awayROT}_${newEventOdd.sport.replace(/\\s/g,'').toUpperCase()}_${newEventOdd.oddType.replace(/\\s/g,'').toUpperCase()}_${moment(newEventOdd.matchTime).format('MMDDYYYY')}`\n\n\t\t\t\t\t \t\t\tconst existedEventOdd = await EventOdd.findOne({ uniqueId: newEventOdd.uniqueId })\n\t\t\t\t\t\t\t\tif(_.isEmpty(existedEventOdd)){\n\t\t\t\t\t\t\t\t\tawait new EventOdd(newEventOdd).save()\n\t\t\t\t\t\t\t\t\tconsole.log(`saved ${newEventOdd.uniqueId}`)\n\t\t\t\t\t\t\t\t}else if(!moment(existedEventOdd.source.lastUpdated).isSame(moment(newEventOdd.source.lastUpdated).format())){\n\t\t\t\t\t\t\t\t\tawait EventOdd.findOneAndUpdate({ uniqueId: newEventOdd.uniqueId }, { $set: newEventOdd })\n\t\t\t\t\t\t\t\t\tconsole.log(`updated ${newEventOdd.uniqueId}`)\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tconsole.log(`${newEventOdd.uniqueId} is up to date`)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t \t\t}\n\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}))\t\t \t\t\n\t\t\t \t}else{\n\t\t \t\t\tconsole.log('pickmon has no update')\n\t\t \t\t}\n\t\t \t}\n \t\t}\n \t}catch(err){\n \t\tthrow err\n \t}\n}\n\nexport default fetch_pickMon_eventOdds"]}