{"version":3,"sources":["../../../src/updateDB/confirmOrderTypeResult/confirmResultTeaser.js"],"names":["confirmResultTeaser","openBet","betOrderStatus","resultAmount","teamLength","eventOdds","length","eventsHaveWon","some","status","eventsHaveLost","eventsHavePush","eventsHavePostponed","eventsHaveCanceled","eventsHaveReview","eventsHavePending","allEventsWon","every","allEventsLost","allEventsPush","allEventsCanceled","allEventsPostponed","eventWonNum","map","event","orderType","wagerDetail","winAmount","riskAmount","teaserOddLine","Number","Math","round","betAmount","abs","toFixed","console","log","orderNumber","newHistoryBet","owner","createdAt","closedAt","save","findOneAndRemove","_id"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;;AACA,IAAMA;AAAA,sDAAsB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvBC,oBAFuB,GAEN,KAFM;AAGvBC,kBAHuB,GAGR,CAHQ;AAKrBC,gBALqB,GAKRH,QAAQI,SAAR,CAAkBC,MALV;AAOrBC,mBAPqB,GAOC,iBAAEC,IAAF,CAAOP,QAAQI,SAAf,EAA0B,EAAEI,QAAQ,KAAV,EAA1B,CAPD;AAQrBC,oBARqB,GAQC,iBAAEF,IAAF,CAAOP,QAAQI,SAAf,EAA0B,EAAEI,QAAQ,MAAV,EAA1B,CARD;AAUrBE,oBAVqB,GAUC,iBAAEH,IAAF,CAAOP,QAAQI,SAAf,EAA0B,EAAEI,QAAQ,MAAV,EAA1B,CAVD;AAWrBG,yBAXqB,GAWC,iBAAEJ,IAAF,CAAOP,QAAQI,SAAf,EAA0B,EAAEI,QAAQ,WAAV,EAA1B,CAXD;AAYrBI,wBAZqB,GAYC,iBAAEL,IAAF,CAAOP,QAAQI,SAAf,EAA0B,EAAEI,QAAQ,UAAV,EAA1B,CAZD;AAarBK,sBAbqB,GAaC,iBAAEN,IAAF,CAAOP,QAAQI,SAAf,EAA0B,EAAEI,QAAQ,QAAV,EAA1B,CAbD;AAcrBM,uBAdqB,GAcC,iBAAEP,IAAF,CAAOP,QAAQI,SAAf,EAA0B,EAAEI,QAAQ,SAAV,EAA1B,CAdD;AAgBrBO,kBAhBqB,GAgBC,iBAAEC,KAAF,CAAQhB,QAAQI,SAAhB,EAA2B,EAAEI,QAAQ,KAAV,EAA3B,CAhBD;AAiBrBS,mBAjBqB,GAiBC,iBAAED,KAAF,CAAQhB,QAAQI,SAAhB,EAA2B,EAAEI,QAAQ,MAAV,EAA3B,CAjBD;AAmBrBU,mBAnBqB,GAmBC,iBAAEF,KAAF,CAAQhB,QAAQI,SAAhB,EAA2B,EAAEI,QAAQ,MAAV,EAA3B,CAnBD;AAoBrBW,uBApBqB,GAoBC,iBAAEH,KAAF,CAAQhB,QAAQI,SAAhB,EAA2B,EAAEI,QAAQ,WAAV,EAA3B,CApBD;AAqBrBY,wBArBqB,GAqBC,iBAAEJ,KAAF,CAAQhB,QAAQI,SAAhB,EAA2B,EAAEI,QAAQ,UAAV,EAA3B,CArBD;AAsB5B;AACC;;AAEIa,iBAzBuB,GAyBT,CAzBS;;AA0B3BrB,cAAQI,SAAR,CAAkBkB,GAAlB,CAAsB,iBAAS;AAC9B,WAAGC,MAAMf,MAAN,KAAiB,KAApB,EAA2Ba;AAC3B,cAAOE,KAAP;AACA,OAHD;;AA1B2B,YA+BxBvB,QAAQwB,SAAR,KAAsB,aA/BE;AAAA;AAAA;AAAA;;AAAA,oBAgCnB,IAhCmB;AAAA,sCAiCpBT,YAjCoB,wBAqCpBE,aArCoB,wBAyCpBE,iBAzCoB,wBA6CpBC,kBA7CoB,wBAiDpBX,cAjDoB,yBA2DpBN,eAAe,CAAf,IAAoBkB,gBAAgB,CAApC,IAAyC,CAACZ,cAA1C,IAA4D,CAACI,gBAA7D,IAAiF,CAACC,iBAAlF,KAAwGJ,kBAAkBC,mBAAlB,IAAyCC,kBAAjJ,CA3DoB,yBA4DpBM,aA5DoB,yBAiEpBZ,iBAAiBe,cAAc,CAA/B,IAAoC,CAACZ,cAArC,IAAuD,CAACI,gBAAxD,IAA4E,CAACC,iBAjEzD;AAAA;;AAAA;AAkCxBb,uBAAiB,KAAjB;AACAC,qBAAeF,QAAQyB,WAAR,CAAoBC,SAAnC;AAnCwB;;AAAA;AAsCxBzB,uBAAiB,MAAjB;AACAC,qBAAe,CAACF,QAAQyB,WAAR,CAAoBE,UAApC;AAvCwB;;AAAA;AA0CxB1B,uBAAiB,UAAjB;AACAC,qBAAe,CAAf;AA3CwB;;AAAA;AA8CxBD,uBAAiB,WAAjB;AACAC,qBAAe,CAAf;AA/CwB;;AAAA;AAkDxBD,uBAAiB,MAAjB;AACAC,qBAAe,CAACF,QAAQyB,WAAR,CAAoBE,UAApC;AACA3B,cAAQI,SAAR,CAAkBkB,GAAlB,CAAsB,iBAAS;AAC9B,WAAGC,MAAMf,MAAN,KAAiB,MAApB,EAA2B;AAC1Be,cAAMf,MAAN,GAAe,QAAf;AACA;AACD,cAAOe,KAAP;AACA,OALD;AApDwB;;AAAA;AA6DxBtB,uBAAiB,MAAjB;AACAC,qBAAe,CAAf;AA9DwB;;AAAA;AAkEpB0B,mBAlEoB,GAkEJC,OAAO,mCAAoB7B,QAAQwB,SAA5B,EAAuCH,WAAvC,CAAP,CAlEI;AAmEpBK,eAnEoB,GAmER,CAnEQ;;;AAqExB,UAAGE,gBAAgB,CAAnB,EAAqB;AACpBF,mBAAYI,KAAKC,KAAL,CAAW/B,QAAQyB,WAAR,CAAoBO,SAApB,GAAgCJ,aAAhC,GAAgD,GAA3D,CAAZ;AACA,OAFD,MAEK;AACJF,mBAAYI,KAAKC,KAAL,CAAW/B,QAAQyB,WAAR,CAAoBO,SAApB,GAAgCF,KAAKG,GAAL,CAASL,aAAT,CAAhC,GAA0D,GAArE,CAAZ;AACA;AACD3B,uBAAiB,KAAjB;AACAC,qBAAe2B,OAAOH,SAAP,EAAkBQ,OAAlB,EAAf;AA3EwB;;AAAA;AA8ExBC,cAAQC,GAAR,CAAYpC,QAAQqC,WAAR,GAAsB,sBAAlC;AA9EwB,uCA+EjB,KA/EiB;;AAAA;AAAA,YAsFxBrC,QAAQwB,SAAR,KAAsB,aAtFE;AAAA;AAAA;AAAA;;AAAA,oBAuFnB,IAvFmB;AAAA,uCAwFpBT,gBAAgBM,gBAAgB,CAxFZ,yBA4FpBJ,aA5FoB,wBAgGpBE,iBAhGoB,wBAoGpBC,kBApGoB,yBAwGpBX,kBAAkBC,cAxGE;AAAA;;AAAA;AAyFxBT,uBAAiB,KAAjB;AACAC,qBAAeF,QAAQyB,WAAR,CAAoBC,SAAnC;AA1FwB;;AAAA;AA6FxBzB,uBAAiB,MAAjB;AACAC,qBAAe,CAACF,QAAQyB,WAAR,CAAoBE,UAApC;AA9FwB;;AAAA;AAiGxB1B,uBAAiB,UAAjB;AACAC,qBAAe,CAAf;AAlGwB;;AAAA;AAqGxBD,uBAAiB,WAAjB;AACAC,qBAAe,CAAf;AAtGwB;;AAAA;AAyGxBD,uBAAiB,MAAjB;AACAC,qBAAe,CAACF,QAAQyB,WAAR,CAAoBE,UAApC;AACA3B,cAAQI,SAAR,CAAkBkB,GAAlB,CAAsB,iBAAS;AAC9B,WAAGC,MAAMf,MAAN,KAAiB,MAAjB,IAA2Be,MAAMf,MAAN,KAAiB,MAA/C,EAAsD;AACrDe,cAAMf,MAAN,GAAe,QAAf;AACA;AACD,cAAOe,KAAP;AACA,OALD;AA3GwB;;AAAA;AAmHxBY,cAAQC,GAAR,CAAYpC,QAAQqC,WAAR,GAAsB,sBAAlC;AAnHwB,uCAoHjB,KApHiB;;AAAA;AAAA,YA4HxBpC,mBAAmB,KA5HK;AAAA;AAAA;AAAA;;AA6HpBqC,mBA7HoB,GA6HJ,yBAAe;AACpCD,oBAAarC,QAAQqC,WADe;AAEpCb,kBAAWxB,QAAQwB,SAFiB;AAGpCe,cAAOvC,QAAQuC,KAHqB;AAIpCd,oBAAazB,QAAQyB,WAJe;AAKpCjB,eAAQP,cAL4B;AAMpCC,qBAAcA,YANsB;AAOpCE,kBAAWJ,QAAQI,SAPiB;AAQpCoC,kBAAWxC,QAAQwC,SARiB;AASpCC,iBAAU;AAT0B,OAAf,CA7HI;AAAA;AAAA,aAyIpBH,cAAcI,IAAd,EAzIoB;;AAAA;AA0I1BP,cAAQC,GAAR,CAAY,6BAA6BE,cAAcD,WAAvD;AA1I0B;AAAA,aA2IpB,kBAAQM,gBAAR,CAAyB,EAAEC,KAAK5C,QAAQ4C,GAAf,EAAzB,CA3IoB;;AAAA;AA4I1BT,cAAQC,GAAR,CAAY,qBAAqBpC,QAAQqC,WAAzC;AA5I0B,uCA6InB,IA7ImB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAmJetC,mB","file":"confirmResultTeaser.js","sourcesContent":["import { OpenBet, HistoryBet } from '../../models/BetOrder';\nimport _ from 'lodash'\nimport moment from 'moment'\nimport teaserOddLineAdjust from './utils/teaserOddLineAdjust'\nconst confirmResultTeaser = async (openBet) => {\n\n\tlet betOrderStatus = 'TBD'\n\tlet resultAmount = 0\n\n\tconst teamLength = openBet.eventOdds.length\n\n\tconst eventsHaveWon       = _.some(openBet.eventOdds, { status: 'Won' })\n\tconst eventsHaveLost      = _.some(openBet.eventOdds, { status: 'Lost' })\n\n\tconst eventsHavePush      = _.some(openBet.eventOdds, { status: 'Push' })\n\tconst eventsHavePostponed = _.some(openBet.eventOdds, { status: 'Postponed' })\n\tconst eventsHaveCanceled  = _.some(openBet.eventOdds, { status: 'Canceled' })\n\tconst eventsHaveReview    = _.some(openBet.eventOdds, { status: 'Review' })\n\tconst eventsHavePending   = _.some(openBet.eventOdds, { status: 'Pending' })\n\t\n\tconst allEventsWon        = _.every(openBet.eventOdds, { status: 'Won' })\n\tconst allEventsLost       = _.every(openBet.eventOdds, { status: 'Lost' })\n\n\tconst allEventsPush       = _.every(openBet.eventOdds, { status: 'Push' })\n\tconst allEventsCanceled   = _.every(openBet.eventOdds, { status: 'Postponed' })\n\tconst allEventsPostponed  = _.every(openBet.eventOdds, { status: 'Canceled' })\n//\tconst allEventsReview     = _.every(openBet.eventOdds, { status: 'Review' })\n\t// const allEventsPending    = _.every(openBet.eventOdds, { status: 'Pending' })\n\n\tlet eventWonNum = 0\n\topenBet.eventOdds.map(event => {\n\t\tif(event.status === 'Won') eventWonNum++\n\t\treturn event\n\t})\n\n\tif(openBet.orderType !== 'SuperTeaser'){\n\t\tswitch(true){\n\t\t\tcase allEventsWon:\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = openBet.wagerDetail.winAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsCanceled:\n\t\t\t\tbetOrderStatus = 'Canceled'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase allEventsPostponed:\n\t\t\t\tbetOrderStatus = 'Postponed'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase eventsHaveLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\topenBet.eventOdds.map(event => {\n\t\t\t\t\tif(event.status !== 'Lost'){\n\t\t\t\t\t\tevent.status = 'Closed'\n\t\t\t\t\t}\n\t\t\t\t\treturn event\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tcase teamLength === 2 && eventWonNum === 1 && !eventsHaveLost && !eventsHaveReview && !eventsHavePending && (eventsHavePush || eventsHavePostponed || eventsHaveCanceled):\n\t\t\tcase allEventsPush:\n\t\t\t\tbetOrderStatus = 'Push'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\n\t\t\tcase eventsHaveWon && eventWonNum > 1 && !eventsHaveLost && !eventsHaveReview && !eventsHavePending:\n\t\t\t\tlet teaserOddLine = Number(teaserOddLineAdjust(openBet.orderType, eventWonNum))\n\t\t\t\tlet winAmount = 0\n\n\t\t\t\tif(teaserOddLine > 0){\n\t\t\t\t\twinAmount = Math.round(openBet.wagerDetail.betAmount * teaserOddLine / 100)\n\t\t\t\t}else{\n\t\t\t\t\twinAmount = Math.round(openBet.wagerDetail.betAmount / Math.abs(teaserOddLine) * 100)\n\t\t\t\t}\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = Number(winAmount).toFixed()\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(openBet.orderNumber + ' teaser not finished')\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\n\tif(openBet.orderType === 'SuperTeaser'){\n\t\tswitch(true){\n\t\t\tcase allEventsWon && eventWonNum === 3:\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = openBet.wagerDetail.winAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsCanceled:\n\t\t\t\tbetOrderStatus = 'Canceled'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase allEventsPostponed:\n\t\t\t\tbetOrderStatus = 'Postponed'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase eventsHaveLost || eventsHavePush:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\topenBet.eventOdds.map(event => {\n\t\t\t\t\tif(event.status !== 'Lost' || event.status !== 'Push'){\n\t\t\t\t\t\tevent.status = 'Closed'\n\t\t\t\t\t}\n\t\t\t\t\treturn event\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(openBet.orderNumber + ' teaser not finished')\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\n\n\tif(betOrderStatus !== 'TBD'){\n\t\tconst newHistoryBet = new HistoryBet({\n\t\t\torderNumber: openBet.orderNumber,\n\t\t\torderType: openBet.orderType,\n\t\t\towner: openBet.owner,\n\t\t\twagerDetail: openBet.wagerDetail,\n\t\t\tstatus: betOrderStatus,\n\t\t\tresultAmount: resultAmount,\n\t\t\teventOdds: openBet.eventOdds,\n\t\t\tcreatedAt: openBet.createdAt,\n\t\t\tclosedAt: moment()\n\t\t})\n\t\n\t\tawait newHistoryBet.save()\n\t\tconsole.log('saved history teaser bet' + newHistoryBet.orderNumber)\n\t\tawait OpenBet.findOneAndRemove({ _id: openBet._id })\n\t\tconsole.log('deleted openbet ' + openBet.orderNumber)\n\t\treturn true\n\n\t}\n\n}\n\nexport default confirmResultTeaser"]}