{"version":3,"sources":["../../../src/updateDB/confirmOrderTypeResult/confirmResultTeaser.js"],"names":["confirmResultTeaser","openBet","betOrderStatus","resultAmount","teamLength","eventOdds","length","eventsHaveWon","some","status","eventsHaveLost","eventsHavePush","eventsHavePostponed","eventsHaveCanceled","eventsHaveReview","eventsHavePending","allEventsWon","every","allEventsLost","allEventsPush","allEventsCanceled","allEventsPostponed","allEventsReview","allEventsPending","eventWonCounter","reduce","total","event","orderType","wagerDetail","winAmount","riskAmount","map","teaserOddLine","Number","Math","round","betAmount","abs","toFixed","console","log","orderNumber","newHistoryBet","owner","createdAt","closedAt","save","findOneAndRemove","_id"],"mappings":"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","file":"confirmResultTeaser.js","sourcesContent":["import { OpenBet, HistoryBet } from '../../models/BetOrder';\nimport _ from 'lodash'\nimport moment from 'moment'\nimport teaserOddLineAdjust from './utils/teaserOddLineAdjust'\nconst confirmResultTeaser = async (openBet) => {\n\n\tlet betOrderStatus = 'TBD'\n\tlet resultAmount = 0\n\n\tconst teamLength = openBet.eventOdds.length\n\n\tconst eventsHaveWon       = _.some(openBet.eventOdds, { status: 'Won' })\n\tconst eventsHaveLost      = _.some(openBet.eventOdds, { status: 'Lost' })\n\tconst eventsHavePush      = _.some(openBet.eventOdds, { status: 'Push' })\n\tconst eventsHavePostponed = _.some(openBet.eventOdds, { status: 'Postponed' })\n\tconst eventsHaveCanceled  = _.some(openBet.eventOdds, { status: 'Canceled' })\n\tconst eventsHaveReview    = _.some(openBet.eventOdds, { status: 'Review' })\n\tconst eventsHavePending   = _.some(openBet.eventOdds, { status: 'Pending' })\n\t\n\tconst allEventsWon        = _.every(openBet.eventOdds, { status: 'Won' })\n\tconst allEventsLost       = _.every(openBet.eventOdds, { status: 'Lost' })\n\tconst allEventsPush       = _.every(openBet.eventOdds, { status: 'Push' })\n\tconst allEventsCanceled   = _.every(openBet.eventOdds, { status: 'Postponed' })\n\tconst allEventsPostponed  = _.every(openBet.eventOdds, { status: 'Canceled' })\n\tconst allEventsReview     = _.every(openBet.eventOdds, { status: 'Review' })\n\tconst allEventsPending    = _.every(openBet.eventOdds, { status: 'Pending' })\n\n\tconst eventWonCounter = openBet.eventOdds.reduce((total, event) => total + ( event.status === 'Won' ), 0 )\n\n\tif(openBet.orderType !== 'SuperTeaser'){\n\t\tswitch(true){\n\t\t\tcase allEventsWon:\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = openBet.wagerDetail.winAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\tbreak;\n\t\t\tcase !eventsHaveWon && !eventsHaveLost && !eventsHavePush && !eventsHavePending && ( eventsHavePostponed || eventsHaveCanceled ):\n\t\t\tcase allEventsPostponed:\n\t\t\tcase allEventsCanceled:\n\t\t\t\tbetOrderStatus = 'Canceled'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase eventsHaveLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\topenBet.eventOdds.map(event => {\n\t\t\t\t\tif(event.status !== 'Lost'){\n\t\t\t\t\t\tevent.status = 'Closed'\n\t\t\t\t\t}\n\t\t\t\t\treturn event\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tcase teamLength === 2 && eventWonCounter === 1 && !eventsHaveLost && !eventsHaveReview && !eventsHavePending && (eventsHavePush || eventsHavePostponed || eventsHaveCanceled):\n\t\t\tcase allEventsPush:\n\t\t\t\tbetOrderStatus = 'Push'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\n\t\t\tcase eventsHaveWon && eventWonCounter > 1 && !eventsHaveLost && !eventsHaveReview && !eventsHavePending:\n\t\t\t\tlet teaserOddLine = Number(teaserOddLineAdjust(openBet.orderType, eventWonCounter))\n\t\t\t\tlet winAmount = 0\n\n\t\t\t\tif(teaserOddLine > 0){\n\t\t\t\t\twinAmount = Math.round(openBet.wagerDetail.betAmount * teaserOddLine / 100)\n\t\t\t\t}else{\n\t\t\t\t\twinAmount = Math.round(openBet.wagerDetail.betAmount / Math.abs(teaserOddLine) * 100)\n\t\t\t\t}\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = Number(winAmount).toFixed()\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(openBet.orderNumber + ' teaser not finished')\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\n\tif(openBet.orderType === 'SuperTeaser'){\n\t\tswitch(true){\n\t\t\tcase allEventsWon && eventWonCounter === 3:\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = openBet.wagerDetail.winAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\tbreak;\n\t\t\tcase !eventsHaveWon && !eventsHaveLost && !eventsHavePush && !eventsHavePending && ( eventsHavePostponed || eventsHaveCanceled ):\n\t\t\tcase allEventsPostponed:\n\t\t\tcase allEventsCanceled:\n\t\t\t\tbetOrderStatus = 'Canceled'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase eventsHavePush:\n\t\t\tcase eventsHaveLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\topenBet.eventOdds.map(event => {\n\t\t\t\t\tif(event.status === 'Lost' || event.status === 'Push'){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}else{\n\t\t\t\t\t\tevent.status = 'Closed'\n\t\t\t\t\t}\n\t\t\t\t\treturn event\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(openBet.orderNumber + ' teaser not finished')\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\n\n\tif(betOrderStatus !== 'TBD'){\n\t\tconst newHistoryBet = new HistoryBet({\n\t\t\torderNumber: openBet.orderNumber,\n\t\t\torderType: openBet.orderType,\n\t\t\towner: openBet.owner,\n\t\t\twagerDetail: openBet.wagerDetail,\n\t\t\tstatus: betOrderStatus,\n\t\t\tresultAmount: resultAmount,\n\t\t\teventOdds: openBet.eventOdds,\n\t\t\tcreatedAt: openBet.createdAt,\n\t\t\tclosedAt: moment()\n\t\t})\n\t\n\t\tawait newHistoryBet.save()\n\t\tconsole.log('saved history teaser bet' + newHistoryBet.orderNumber)\n\t\tawait OpenBet.findOneAndRemove({ _id: openBet._id })\n\t\tconsole.log('deleted openbet ' + openBet.orderNumber)\n\n\t\t// updateAgentCredit if player lose\n\t\t// create new trasaction\n\n\t\treturn true\n\n\t}\n\n}\n\nexport default confirmResultTeaser"]}