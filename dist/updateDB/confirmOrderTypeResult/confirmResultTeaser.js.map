{"version":3,"sources":["../../../src/updateDB/confirmOrderTypeResult/confirmResultTeaser.js"],"names":["confirmResultTeaser","openBet","betOrderStatus","resultAmount","teamLength","eventOdds","length","eventsHaveWon","some","status","eventsHaveLost","eventsHavePush","eventsHavePostponed","eventsHaveCanceled","eventsHaveReview","eventsHavePending","allEventsWon","every","allEventsLost","allEventsPush","allEventsCanceled","allEventsPostponed","eventWonCounter","reduce","total","event","orderType","wagerDetail","winAmount","riskAmount","map","teaserOddLine","Number","Math","round","betAmount","abs","toFixed","console","log","orderNumber","newHistoryBet","owner","createdAt","closedAt","save","findOneAndRemove","_id"],"mappings":"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","file":"confirmResultTeaser.js","sourcesContent":["import { OpenBet, HistoryBet } from '../../models/BetOrder';\nimport _ from 'lodash'\nimport moment from 'moment'\nimport teaserOddLineAdjust from './utils/teaserOddLineAdjust'\nconst confirmResultTeaser = async (openBet) => {\n\n\tlet betOrderStatus = 'TBD'\n\tlet resultAmount = 0\n\n\tconst teamLength = openBet.eventOdds.length\n\n\tconst eventsHaveWon       = _.some(openBet.eventOdds, { status: 'Won' })\n\tconst eventsHaveLost      = _.some(openBet.eventOdds, { status: 'Lost' })\n\n\tconst eventsHavePush      = _.some(openBet.eventOdds, { status: 'Push' })\n\tconst eventsHavePostponed = _.some(openBet.eventOdds, { status: 'Postponed' })\n\tconst eventsHaveCanceled  = _.some(openBet.eventOdds, { status: 'Canceled' })\n\tconst eventsHaveReview    = _.some(openBet.eventOdds, { status: 'Review' })\n\tconst eventsHavePending   = _.some(openBet.eventOdds, { status: 'Pending' })\n\t\n\tconst allEventsWon        = _.every(openBet.eventOdds, { status: 'Won' })\n\tconst allEventsLost       = _.every(openBet.eventOdds, { status: 'Lost' })\n\n\tconst allEventsPush       = _.every(openBet.eventOdds, { status: 'Push' })\n\tconst allEventsCanceled   = _.every(openBet.eventOdds, { status: 'Postponed' })\n\tconst allEventsPostponed  = _.every(openBet.eventOdds, { status: 'Canceled' })\n//\tconst allEventsReview     = _.every(openBet.eventOdds, { status: 'Review' })\n\t// const allEventsPending    = _.every(openBet.eventOdds, { status: 'Pending' })\n\n\tconst eventWonCounter = openBet.eventOdds.reduce((total, event) => total + ( event.status === 'Won' ), 0 )\n\n\tif(openBet.orderType !== 'SuperTeaser'){\n\t\tswitch(true){\n\t\t\tcase allEventsWon:\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = openBet.wagerDetail.winAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsCanceled:\n\t\t\t\tbetOrderStatus = 'Canceled'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase allEventsPostponed:\n\t\t\t\tbetOrderStatus = 'Postponed'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase eventsHaveLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\topenBet.eventOdds.map(event => {\n\t\t\t\t\tif(event.status !== 'Lost'){\n\t\t\t\t\t\tevent.status = 'Closed'\n\t\t\t\t\t}\n\t\t\t\t\treturn event\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tcase teamLength === 2 && eventWonCounter === 1 && !eventsHaveLost && !eventsHaveReview && !eventsHavePending && (eventsHavePush || eventsHavePostponed || eventsHaveCanceled):\n\t\t\tcase allEventsPush:\n\t\t\t\tbetOrderStatus = 'Push'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\n\t\t\tcase eventsHaveWon && eventWonCounter > 1 && !eventsHaveLost && !eventsHaveReview && !eventsHavePending:\n\t\t\t\tlet teaserOddLine = Number(teaserOddLineAdjust(openBet.orderType, eventWonCounter))\n\t\t\t\tlet winAmount = 0\n\n\t\t\t\tif(teaserOddLine > 0){\n\t\t\t\t\twinAmount = Math.round(openBet.wagerDetail.betAmount * teaserOddLine / 100)\n\t\t\t\t}else{\n\t\t\t\t\twinAmount = Math.round(openBet.wagerDetail.betAmount / Math.abs(teaserOddLine) * 100)\n\t\t\t\t}\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = Number(winAmount).toFixed()\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(openBet.orderNumber + ' teaser not finished')\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\n\tif(openBet.orderType === 'SuperTeaser'){\n\t\tswitch(true){\n\t\t\tcase allEventsWon && eventWonCounter === 3:\n\t\t\t\tbetOrderStatus = 'Won'\n\t\t\t\tresultAmount = openBet.wagerDetail.winAmount\n\t\t\t\tbreak;\n\t\t\tcase allEventsLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\tbreak;\n\t\t\tcase eventsHaveWon && !eventsHavePush && !eventsHaveLost && !eventsHaveReview && (allEventsCanceled || allEventsPostponed):\n\t\t\tcase allEventsCanceled:\n\t\t\t\tbetOrderStatus = 'Canceled'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase allEventsPostponed:\n\t\t\t\tbetOrderStatus = 'Postponed'\n\t\t\t\tresultAmount = 0\n\t\t\t\tbreak;\n\t\t\tcase eventsHavePush:\n\t\t\tcase eventsHaveLost:\n\t\t\t\tbetOrderStatus = 'Lost'\n\t\t\t\tresultAmount = -openBet.wagerDetail.riskAmount\n\t\t\t\topenBet.eventOdds.map(event => {\n\t\t\t\t\tif(event.status === 'Lost' || event.status === 'Push'){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}else{\n\t\t\t\t\t\tevent.status = 'Closed'\n\t\t\t\t\t}\n\t\t\t\t\treturn event\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(openBet.orderNumber + ' teaser not finished')\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n\n\n\tif(betOrderStatus !== 'TBD'){\n\t\tconst newHistoryBet = new HistoryBet({\n\t\t\torderNumber: openBet.orderNumber,\n\t\t\torderType: openBet.orderType,\n\t\t\towner: openBet.owner,\n\t\t\twagerDetail: openBet.wagerDetail,\n\t\t\tstatus: betOrderStatus,\n\t\t\tresultAmount: resultAmount,\n\t\t\teventOdds: openBet.eventOdds,\n\t\t\tcreatedAt: openBet.createdAt,\n\t\t\tclosedAt: moment()\n\t\t})\n\t\n\t\tawait newHistoryBet.save()\n\t\tconsole.log('saved history teaser bet' + newHistoryBet.orderNumber)\n\t\tawait OpenBet.findOneAndRemove({ _id: openBet._id })\n\t\tconsole.log('deleted openbet ' + openBet.orderNumber)\n\t\treturn true\n\n\t}\n\n}\n\nexport default confirmResultTeaser"]}