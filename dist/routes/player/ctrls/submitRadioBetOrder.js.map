{"version":3,"sources":["../../../../src/routes/player/ctrls/submitRadioBetOrder.js"],"names":["submitRadioBetOrder","req","res","body","eventOdds","wagerDetails","orderType","newOrderCombo","map","event","find","user","_id","existedOrders","existed","existedOrderNumber","existedOrderCombo","existedOrder","difference","length","orderNumber","Promise","all","eventTimeOut","isSameOrAfter","cutOffTime","format","status","betDetail","note","findOne","uniqueId","latestEvent","betDetailMatch","betDetailPrev","latestBetDetail","then","submitCheckPass","every","json","betType","betAmount","riskAmount","winAmount","confirm","newOpenBet","process","toUpperCase","owner","player","agent","superAgent","wagerDetail","save","console","log"],"mappings":"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","file":"submitRadioBetOrder.js","sourcesContent":["import _ from 'lodash';\nimport uniqid from 'uniqid';\nimport moment from 'moment';\nimport { EventOdd } from '../../../models/EventOdd';\nimport { OpenBet } from '../../../models/BetOrder';\n\nimport compareBetDetail from '../../../utils/compareBetDetail';\nimport updatePlayerStatusAfterOrder from '../../../updateDB/updateUser/updatePlayerStatusAfterOrder';\nimport updateAgentOpenBetStatusAfterOrder from '../../../updateDB/updateUser/updateAgentOpenBetStatusAfterOrder';\n\n\nconst submitRadioBetOrder = async (req, res) => {\n\n\ttry{\n\n\t\tconst { eventOdds, wagerDetails, orderType } = req.body \n\t\tconst newOrderCombo = eventOdds.map(event => { return event['singlePickId'] }) \n\t\tconst existedOrders = await OpenBet.find({ 'owner.player': req.user._id, 'orderType': orderType })\n\t\tlet existed = false\n\t\tlet existedOrderNumber = ''\n\n\t\texistedOrders.map(existedOrder => {\n\t\t\tif(existed) return\n\t\t\tconst existedOrderCombo = existedOrder.eventOdds.map(event => { return event['singlePickId'] }) \n\t\t\tif(_.difference(newOrderCombo, existedOrderCombo).length === 0){\n\t\t\t\texisted = true\n\t\t\t\texistedOrderNumber = existedOrder.orderNumber\n\t\t\t\treturn\n\t\t\t}\n\t\t})\n\n\t\tawait Promise.all(eventOdds.map(async event => {\n\t\t\tconst eventTimeOut = moment().isSameOrAfter(moment(event.cutOffTime).format())\n\t\t\tswitch(true){\n\t\t\t\tcase eventTimeOut:\n\t\t\t\t\tevent.status = 'TimeOut'\n\t\t\t\t\tdelete event.betDetail\n\t\t\t\t\tbreak;\n\t\t\t\tcase existed:\n\t\t\t\t\tevent.status = 'Existed'\n\t\t\t\t\tevent.note = existedOrderNumber\n\t\t\t\t\tdelete event.betDetail\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconst latestEvent = await EventOdd.findOne({ uniqueId: event.uniqueId })\n\t\t\t\t\tif(compareBetDetail(event, latestEvent, orderType).betDetailMatch){\n\t\t\t\t\t\tevent.status = 'Pending'\n\t\t\t\t\t\tevent.note = ''\n\t\t\t\t\t}else{\n\t\t\t\t\t\tevent.status = 'HasUpdated'\n\t\t\t\t\t\tevent.betDetailPrev = event.betDetail\n\t\t\t\t\t\tevent.betDetail = compareBetDetail(event, latestEvent, orderType).latestBetDetail\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn event\n\t\t})).then(async () => {\n\t\t\tconst submitCheckPass = eventOdds.every(event => event.status === 'Pending')\n\t\t\tif(!submitCheckPass){\n\t\t\t\tres.json({ eventOdds: eventOdds, wagerDetails: {\n\t\t\t\t\tbetType: 'risk',\n\t\t\t\t\tbetAmount: 0,\n\t\t\t\t\triskAmount: 0,\n\t\t\t\t\twinAmount: 0,\n\t\t\t\t\tconfirm: false\n\t\t\t\t}})\n\t\t\t}else{\n\t\t\t\tconst newOpenBet = new OpenBet({\n\t\t\t\t\torderNumber: uniqid.process().toUpperCase(),\n\t\t\t\t\torderType: orderType,\n\t\t\t\t\towner:{\n\t\t\t\t\t\tplayer: req.user._id,\n\t\t\t\t\t\tagent: req.user.agent,\n\t\t\t\t\t\tsuperAgent: req.user.superAgent\n\t\t\t\t\t},\n\t\t\t\t\twagerDetail: wagerDetails,\n\t\t\t\t\tstatus: 'Pending',\n\t\t\t\t\teventOdds: eventOdds\n\t\t\t\t})\n\t\t\t\tawait newOpenBet.save()\n\t\t\t\tconsole.log(`saved new openBet ${newOpenBet.orderNumber}`)\n\t\t\t\tawait updatePlayerStatusAfterOrder(req.user._id)\n\t\t\t\tawait updateAgentOpenBetStatusAfterOrder(req.user.agent)\n\t\t\t\tres.json([])\n\t\t\t}\n\t\t})\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\n\n\n\n\nexport default submitRadioBetOrder;\n\n"]}