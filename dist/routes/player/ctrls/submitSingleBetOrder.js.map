{"version":3,"sources":["../../../../src/routes/player/ctrls/submitSingleBetOrder.js"],"names":["submitSingleBetOrder","req","res","body","eventOdds","wagerDetails","orderType","findOne","_id","user","agent","totalWinAmount","Object","keys","map","Number","wager","winAmount","currentStatus","availableCredit","Promise","all","event","eventIdx","eventTimeOut","isSameOrAfter","cutOffTime","format","singlePickId","existed","isEmpty","status","betDetail","note","orderNumber","uniqueId","latestEvent","betDetailMatch","betDetailPrev","latestBetDetail","betType","betAmount","riskAmount","confirm","then","submitCheckPass","every","json","newOpenBet","process","toUpperCase","owner","player","superAgent","wagerDetail","save","console","log","catch","err"],"mappings":"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","file":"submitSingleBetOrder.js","sourcesContent":["import _ from 'lodash';\nimport uniqid from 'uniqid';\nimport moment from 'moment';\n\nimport Agent from '../../../models/Agent'\nimport Player from '../../../models/Player';\nimport { EventOdd } from '../../../models/EventOdd';\nimport { OpenBet, HistoryBet } from '../../../models/BetOrder';\n\nimport compareBetDetail from '../../../utils/compareBetDetail';\nimport updatePlayerStatusAfterOrder from '../../../updateDB/updateUser/updatePlayerStatusAfterOrder';\nimport updateAgentOpenBetStatusAfterOrder from '../../../updateDB/updateUser/updateAgentOpenBetStatusAfterOrder';\n//34976\nconst submitSingleBetOrder = async (req, res) => {\n\n\ttry{\n\n\t\tconst { eventOdds, wagerDetails, orderType } = req.body\n\n\t\tconst agent = await Agent.findOne({ _id: req.user.agent }, 'currentStatus.availableCredit')\n\n\t\tlet totalWinAmount = 0\n\t\tObject.keys(wagerDetails).map(wager => {\n\t\t\ttotalWinAmount += Number(wagerDetails[wager].winAmount)\n\t\t})\n\n\t\tif( agent.currentStatus.availableCredit > totalWinAmount ){\n\t\t\tawait Promise.all(eventOdds.map(async (event, eventIdx) => {\n\t\t\t\tconst eventTimeOut = moment().isSameOrAfter(moment(event.cutOffTime).format())\n\t\t\t\tconst existed = await OpenBet.findOne({ 'owner.player': req.user._id, orderType: orderType, 'eventOdds.singlePickId': event.singlePickId })\n\t\t\t\tswitch(true){\n\t\t\t\t\tcase eventTimeOut:\n\t\t\t\t\t\tevent.status = 'TimeOut'\n\t\t\t\t\t\tdelete event.betDetail\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase !_.isEmpty(existed):\n\t\t\t\t\t\tevent.status = 'Existed'\n\t\t\t\t\t\tevent.note = existed.orderNumber\n\t\t\t\t\t\tdelete event.betDetail\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconst latestEvent = await EventOdd.findOne({ uniqueId: event.uniqueId })\n\t\t\t\t\t\tif(compareBetDetail(event, latestEvent, orderType).betDetailMatch){\n\t\t\t\t\t\t\tevent.status = 'Pending'\n\t\t\t\t\t\t\tevent.note = ''\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tevent.status = 'HasUpdated'\n\t\t\t\t\t\t\tevent.betDetailPrev = event.betDetail\n\t\t\t\t\t\t\tevent.betDetail = compareBetDetail(event, latestEvent, orderType).latestBetDetail\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(event.status !== 'Pending'){\n\t\t\t\t\twagerDetails[event.singlePickId] = {\n\t\t\t\t\t\tbetType: 'wager',\n\t\t\t\t\t\tbetAmount: 0,\n\t\t\t\t\t\triskAmount: 0,\n\t\t\t\t\t\twinAmount: 0,\n\t\t\t\t\t\tconfirm: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn event\n\t\t\t})).then(async () => {\n\t\t\t\tconst submitCheckPass = eventOdds.every(event => event.status === 'Pending')\n\t\t\t\tif(!submitCheckPass){\n\t\t\t\t\tres.json({ eventOdds: eventOdds, wagerDetails: wagerDetails })\n\t\t\t\t}else{\n\t\t\t\t\tawait Promise.all(eventOdds.map(async event => {\n\t\t\t\t\t\tconst newOpenBet = new OpenBet({\n\t\t\t\t\t\t\torderNumber: uniqid.process().toUpperCase(),\n\t\t\t\t\t\t\torderType: orderType,\n\t\t\t\t\t\t\towner:{\n\t\t\t\t\t\t\t\tplayer: req.user._id,\n\t\t\t\t\t\t\t\tagent: req.user.agent,\n\t\t\t\t\t\t\t\tsuperAgent: req.user.superAgent\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\twagerDetail: {\n\t\t\t\t\t\t\t\tbetType: wagerDetails[event.singlePickId].betType,\n\t\t\t\t\t\t\t\tbetAmount: wagerDetails[event.singlePickId].betAmount,\n\t\t\t\t\t\t\t\twinAmount: wagerDetails[event.singlePickId].winAmount,\n\t\t\t\t\t\t\t\triskAmount: wagerDetails[event.singlePickId].riskAmount\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstatus: 'Pending',\n\t\t\t\t\t\t\teventOdds: [event]\n\t\t\t\t\t\t})\n\t\t\t\t\t\tawait newOpenBet.save().then(() => { console.log(`saved new openBet ${newOpenBet.orderNumber}`) }).catch(err => { throw err })\n\t\t\t\t\t\treturn null\n\t\t\t\t\t})).then(async () => {\n\t\t\t\t\t\tawait updatePlayerStatusAfterOrder(req.user._id)\n\t\t\t\t\t\tawait updateAgentOpenBetStatusAfterOrder(req.user.agent)\n\t\t\t\t\t\tres.json([])\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}else{\n\t\t\tres.json('agentOutOfCredit')\n\t\t}\n\n\t}catch(err){\n\t\tthrow err\n\t}\n\n}\n\nexport default submitSingleBetOrder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}