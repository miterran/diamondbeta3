{"version":3,"sources":["../../../../src/routes/agent/ctrls/fetchTransaction.js"],"names":["fetchTransaction","req","res","weekNum","body","find","user","_id","createdAt","$gte","subtract","startOf","$lte","endOf","populate","path","select","transactions","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA;AAAA,sDAAmB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,aADgB,GACJF,IAAIG,IADA,CAChBD,OADgB;AAAA;AAAA,aAEG,2BAAiBE,IAAjB,CAAsB;AAChD,sBAAeJ,IAAIK,IAAJ,CAASC,GADwB;AAEhDC,kBAAW,EAAEC,MAAM,wBAASC,QAAT,CAAkBP,OAAlB,EAA2B,GAA3B,EAAgCQ,OAAhC,CAAwC,SAAxC,CAAR,EAA4DC,MAAM,wBAASF,QAAT,CAAkBP,OAAlB,EAA2B,GAA3B,EAAgCU,KAAhC,CAAsC,SAAtC,CAAlE;AAFqC,OAAtB,EAGxBC,QAHwB,CAGf,EAAEC,MAAM,aAAR,EAAuBC,QAAQ,kBAA/B,EAHe,EAGqCF,QAHrC,CAG8C,EAAEC,MAAM,cAAR,EAAwBC,QAAQ,kBAAhC,EAH9C,CAFH;;AAAA;AAElBC,kBAFkB;;;AAQxBf,UAAIgB,IAAJ,CAASD,YAAT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA2BejB,gB;;AAKf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA","file":"fetchTransaction.js","sourcesContent":["import moment from 'moment'\nimport Player from '../../../models/Player';\nimport Agent from '../../../models/Agent';\nimport AgentTransaction from '../../../models/AgentTransaction';\n\nconst fetchTransaction = async (req, res) => {\n\tconst { weekNum } = req.body\n\tconst transactions = await AgentTransaction.find({ \n\t\t'owner.agent': req.user._id, \n\t\tcreatedAt: { $gte: moment().subtract(weekNum, 'w').startOf('isoWeek'), $lte: moment().subtract(weekNum, 'w').endOf('isoWeek')}\n\t}).populate({ path: 'owner.agent', select: 'account.username'}).populate({ path: 'owner.player', select: 'account.username'})\n\n\n\tres.json(transactions)\n\n\t// await Promise.all(transactions.map(async transaction => {\n\t// \tif(transaction.orderType === 'Deposit'){\n\t// \t\tlet agent = await Agent.findOne({ _id: transaction.user }, 'account.username')\n\t// \t\ttransaction.user = agent.account.username\n\t// \t\tconsole.log(agent.account.username)\n\t// \t\tconsole.log(transaction.user)\n\t// \t}else{\n\t// \t\tlet user = await Player.findOne({ _id: transaction.user }, 'account.username')\n\t// \t\ttransaction.user = user.account.username\n\t// \t}\n\t// \treturn transaction.user\n\t// })).then(data => {\n\t// \tres.json(data)\n\t// })\n\n}\n\nexport default fetchTransaction;\n\n\n\n\n// const fetchHistoryBet = async (req, res) => {\n\n// \tconst { weekNum, player } = req.body\n// \tconst historyBetList = await HistoryBet.find({ 'owner.agent': req.user._id, 'owner.player': player, 'closedAt': {$gte: moment().subtract(weekNum, 'w').startOf('isoWeek'), $lte: moment().subtract(weekNum, 'w').endOf('isoWeek') } })\n\n// \tlet historyBets = {\n// \t\thistoryBetList: historyBetList,\n// \t\tweekSummary: {\n// \t\t\t[moment().startOf('isoWeek').subtract(weekNum, 'w').add(0, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n// \t\t\t[moment().startOf('isoWeek').subtract(weekNum, 'w').add(1, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n// \t\t\t[moment().startOf('isoWeek').subtract(weekNum, 'w').add(2, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n// \t\t\t[moment().startOf('isoWeek').subtract(weekNum, 'w').add(3, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n// \t\t\t[moment().startOf('isoWeek').subtract(weekNum, 'w').add(4, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n// \t\t\t[moment().startOf('isoWeek').subtract(weekNum, 'w').add(5, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n// \t\t\t[moment().startOf('isoWeek').subtract(weekNum, 'w').add(6, 'd').format('MMM DD')]: { bets: 0, amount: 0 }\n// \t\t}\n// \t}\n\n\n// \tif(!_.isEmpty(historyBetList)){\n// \t\thistoryBetList.forEach(historyBet => {\n// \t\t\thistoryBets.weekSummary[moment(historyBet.closedAt).format('MMM DD')].amount += Number(historyBet.resultAmount);\n// \t\t\thistoryBets.weekSummary[moment(historyBet.closedAt).format('MMM DD')].bets++;\n// \t\t})\n// \t}\n\n// \tres.json(historyBets)\n\n// }\n\n\n// export default fetchHistoryBet\n\n"]}