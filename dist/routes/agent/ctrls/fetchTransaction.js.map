{"version":3,"sources":["../../../../src/routes/agent/ctrls/fetchTransaction.js"],"names":["fetchTransaction","req","res","weekNum","body","pendingTransactionList","newList","agentCredit","user","currentStatus","credit","pendingCredit","find","_id","populate","path","select","sort","a","b","Date","createdAt","map","transaction","transactionIdx","wagerDetail","riskAmount","orderNumber","orderType","owner","balance","$gte","subtract","startOf","$lte","endOf","transactionList","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA;AAAA,sDAAmB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhBC,aAHgB,GAGJF,IAAIG,IAHA,CAGhBD,OAHgB;AAKpBE,4BALoB,GAKK,EALL;AAMpBC,aANoB,GAMV,EANU;;AAAA,YAQpBH,YAAY,CARQ;AAAA;AAAA;AAAA;;AASnBI,iBATmB,GASLN,IAAIO,IAAJ,CAASC,aAAT,CAAuBC,MATlB;AAUnBC,mBAVmB,GAUH,CAVG;AAAA;AAAA,aAaQ,kBAAQC,IAAR,CAAa;AAC3C,sBAAeX,IAAIO,IAAJ,CAASK;AADmB,OAAb,EAE5B,qEAF4B,EAG9BC,QAH8B,CAGrB,EAAEC,MAAM,cAAR,EAAwBC,QAAQ,kBAAhC,EAHqB,CAbR;;AAAA;AAavBX,4BAbuB;;;AAkBvBA,6BAAuBY,IAAvB,CAA4B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAAE,cAAO,IAAIC,IAAJ,CAASF,EAAEG,SAAX,IAAwB,IAAID,IAAJ,CAASD,EAAEE,SAAX,CAA/B;AAAsD,OAA9F;;AAEAf,gBAAUD,uBAAuBiB,GAAvB,CAA2B,UAACC,WAAD,EAAcC,cAAd,EAAgC;;AAEpEjB,sBAAegB,YAAYE,WAAZ,CAAwBC,UAAvC;;AAEA,cAAO;AACNC,qBAAaJ,YAAYI,WADnB;AAENC,mBAAWL,YAAYK,SAFjB;AAGNP,mBAAWE,YAAYF,SAHjB;AAINI,qBAAaF,YAAYE,WAJnB;AAKNI,eAAON,YAAYM,KALb;AAMNC,iBAASvB;AANH,QAAP;AAQA,OAZS,CAAV;;AApBuB;AAAA;AAAA,aAsCM,2BAAiBK,IAAjB,CAAsB;AACnD,sBAAeX,IAAIO,IAAJ,CAASK,GAD2B;AAEnDQ,kBAAW,EAAEU,MAAM,wBAASC,QAAT,CAAkB7B,OAAlB,EAA2B,GAA3B,EAAgC8B,OAAhC,CAAwC,SAAxC,CAAR,EAA4DC,MAAM,wBAASF,QAAT,CAAkB7B,OAAlB,EAA2B,GAA3B,EAAgCgC,KAAhC,CAAsC,SAAtC,CAAlE;AAFwC,OAAtB,EAG3BrB,QAH2B,CAGlB,EAAEC,MAAM,aAAR,EAAuBC,QAAQ,kBAA/B,EAHkB,EAGkCF,QAHlC,CAG2C,EAAEC,MAAM,cAAR,EAAwBC,QAAQ,kBAAhC,EAH3C,CAtCN;;AAAA;AAsClBoB,qBAtCkB;;;AA4CxBlC,UAAImC,IAAJ,CAAS,EAAED,iBAAiBA,eAAnB,EAAoC/B,wBAAwBC,OAA5D,EAAT;;AA5CwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA+CeN,gB;;AAMf","file":"fetchTransaction.js","sourcesContent":["import moment from 'moment'\nimport Player from '../../../models/Player';\nimport Agent from '../../../models/Agent';\nimport AgentTransaction from '../../../models/AgentTransaction';\nimport { OpenBet } from '../../../models/BetOrder';\n\nconst fetchTransaction = async (req, res) => {\n\n\n\tconst { weekNum } = req.body\n\n\tlet pendingTransactionList = []\n\tlet newList = []\n\n\tif( weekNum === 0 ){\n\t\tlet agentCredit = req.user.currentStatus.credit\n\t\tlet pendingCredit = 0\n\n\n\t\tpendingTransactionList = await OpenBet.find({ \n\t\t\t'owner.agent': req.user._id \n\t\t}, 'orderNumber orderType createdAt wagerDetail.riskAmount owner.player')\n\t\t.populate({ path: 'owner.player', select: 'account.username'})\n\n\t\tpendingTransactionList.sort((a, b) => { return new Date(a.createdAt) - new Date(b.createdAt) })\n\n\t\tnewList = pendingTransactionList.map((transaction, transactionIdx)=> {\n\n\t\t\tagentCredit -= transaction.wagerDetail.riskAmount\n\n\t\t\treturn {\n\t\t\t\torderNumber: transaction.orderNumber,\n\t\t\t\torderType: transaction.orderType,\n\t\t\t\tcreatedAt: transaction.createdAt,\n\t\t\t\twagerDetail: transaction.wagerDetail,\n\t\t\t\towner: transaction.owner,\n\t\t\t\tbalance: agentCredit\n\t\t\t}\n\t\t})\n\n\t}\n\n\n\n\tconst transactionList = await AgentTransaction.find({ \n\t\t'owner.agent': req.user._id, \n\t\tcreatedAt: { $gte: moment().subtract(weekNum, 'w').startOf('isoWeek'), $lte: moment().subtract(weekNum, 'w').endOf('isoWeek')}\n\t}).populate({ path: 'owner.agent', select: 'account.username'}).populate({ path: 'owner.player', select: 'account.username'})\n\n\n\tres.json({ transactionList: transactionList, pendingTransactionList: newList })\n}\n\nexport default fetchTransaction;\n\n\n\n\n\n// response.data.pendingTransactionList.sort((a, b) => { return new Date(b.createdAt) - new Date(a.createdAt) })"]}