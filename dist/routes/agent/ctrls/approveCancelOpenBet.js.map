{"version":3,"sources":["../../../../src/routes/agent/ctrls/approveCancelOpenBet.js"],"names":["approveCancelOpenBet","req","res","console","log","body","cancelList","Promise","all","map","openBetId","findOneAndRemove","_id","Types","ObjectId","openBet","isEmpty","json","then","openBets","players","uniq","owner","player","playerId","user"],"mappings":";;;;;;AAAA;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;;;;;AAGA,IAAMA;AAAA,sDAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE3BC,cAAQC,GAAR,CAAYH,IAAII,IAAhB;AACQC,gBAHmB,GAGJL,IAAII,IAHA,CAGnBC,UAHmB;AAAA;AAAA,aAIrBC,QAAQC,GAAR,CAAYF,WAAWG,GAAX;AAAA,6DAAe,iBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACV,kBAAQC,gBAAR,CAAyB,EAAEC,KAAK,mBAASC,KAAT,CAAeC,QAAf,CAAwBJ,SAAxB,CAAP,EAAzB,CADU;;AAAA;AAC1BK,mBAD0B;;AAAA,gBAE5B,iBAAEC,OAAF,CAAUD,OAAV,CAF4B;AAAA;AAAA;AAAA;;AAAA,6CAGxBA,OAHwB;;AAAA;AAK/Bb,gBAAIe,IAAJ,CAAS,UAAT;;AAL+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;;AAAA;AAAA;AAAA;AAAA,UAAZ,EAOFC,IAPE;AAAA,6DAOG,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,mBADE,GACQ,iBAAEC,IAAF,CAAOF,SAASV,GAAT,CAAa;AAAA,oBAAWM,QAAQO,KAAR,CAAcC,MAAzB;AAAA,aAAb,CAAP,CADR;AAAA;AAAA,mBAEFhB,QAAQC,GAAR,CAAYY,QAAQX,GAAR;AAAA,mEAAY,kBAAMe,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACvB,4CAA6BA,QAA7B,CADuB;;AAAA;AAAA,oDAEtB,IAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPH;;AAAA;AAAA;AAAA;AAAA,WAaHN,IAbG,2CAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,kDAAmCjB,IAAIwB,IAAJ,CAASb,GAA5C,CADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbF,IAeHM,IAfG,CAeE,YAAM;AACbhB,WAAIe,IAAJ,CAAS,MAAT;AACA,OAjBK,CAJqB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA2BejB,oB","file":"approveCancelOpenBet.js","sourcesContent":["import { OpenBet } from '../../../models/BetOrder';\nimport mongoose from 'mongoose';\n\nimport _ from 'lodash'\n\nimport updatePlayerStatusAfterOrder from '../../../updateDB/updateUser/updatePlayerStatusAfterOrder';\nimport updateAgentOpenBetStatusAfterOrder from '../../../updateDB/updateUser/updateAgentOpenBetStatusAfterOrder';\n\n\nconst approveCancelOpenBet = async (req, res) => {\n\ttry{\n\t\tconsole.log(req.body)\n\t\tconst { cancelList } = req.body\n\t\tawait Promise.all(cancelList.map(async openBetId => {\n\t\t\tconst openBet = await OpenBet.findOneAndRemove({ _id: mongoose.Types.ObjectId(openBetId) })\n\t\t\tif(!_.isEmpty(openBet)){\n\t\t\t\treturn openBet\n\t\t\t}else{\n\t\t\t\tres.json('notFound')\n\t\t\t}\n\t\t})).then(async openBets => {\n\t\t\tconst players = _.uniq(openBets.map(openBet => openBet.owner.player))\n\t\t\tawait Promise.all(players.map(async playerId => {\n\t\t\t\tawait updatePlayerStatusAfterOrder(playerId)\n\t\t\t\treturn null\n\t\t\t}))\n\t\t}).then(async () => {\n\t\t\tawait updateAgentOpenBetStatusAfterOrder(req.user._id)\n\t\t}).then(() => {\n\t\t\tres.json('done')\n\t\t})\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default approveCancelOpenBet;"]}