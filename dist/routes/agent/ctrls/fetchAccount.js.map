{"version":3,"sources":["../../../../src/routes/agent/ctrls/fetchAccount.js"],"names":["fetchAccount","req","res","find","user","_id","playerOpenBets","$gte","startOf","$lte","endOf","playerHistoryBets","playerCurrentBalance","reduce","total","historyBet","Number","resultAmount","totalWin","openBet","wagerDetail","winAmount","straightBetCounter","orderType","parlayBetCounter","teaserBetCounter","reverseBetCounter","playerAccount","openBetStatus","straightBet","parlayBet","teaserBet","reverseBet","totalBets","length","totalRisk","currentStatus","creditPending","thisWeekSummary","add","format","bets","amount","isEmpty","forEach","closedAt","json"],"mappings":"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","file":"fetchAccount.js","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash'\nimport Agent from '../../../models/Agent';\nimport { OpenBet, HistoryBet } from '../../../models/BetOrder';\n\nconst fetchAccount = async (req, res) => {\n\ttry{\n\n\t\tconst playerOpenBets = await OpenBet.find({ 'owner.player': req.user._id }, 'orderType wagerDetail.riskAmount wagerDetail.winAmount')\n\n\t\tconst playerHistoryBets = await HistoryBet.find({ 'owner.player': req.user._id, 'closedAt': {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek')} }, 'closedAt resultAmount')\n\n\t\tconst playerCurrentBalance = playerHistoryBets.reduce((total, historyBet) => total + Number(historyBet.resultAmount), 0)\n\n\t\tconst totalWin = playerOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.winAmount), 0)\n\n\t\tconst straightBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Straight' ), 0)\n\n\t\tconst parlayBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Parlay' ), 0)\n\n\t\tconst teaserBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Teaser6040' || openBet.orderType === 'Teaser6545' || openBet.orderType === 'Teaser7050' || openBet.orderType === 'SuperTeaser' ), 0)  // indexOf\n\n\t\tconst reverseBetCounter = playerOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'ActionReverse' || openBet.orderType === 'WinReverse' ), 0)\n\n\n\t\tconst playerAccount = {\n\t\t\topenBetStatus: {\n\t\t\t\tstraightBet: straightBetCounter || 0,\n\t\t\t\tparlayBet: parlayBetCounter || 0,\n\t\t\t\tteaserBet: teaserBetCounter || 0,\n\t\t\t\treverseBet: reverseBetCounter || 0,\n\t\t\t\ttotalBets: playerOpenBets.length || 0,\n\t\t\t\ttotalRisk: req.user.currentStatus.creditPending || 0,\n\t\t\t\ttotalWin: totalWin || 0\n\t\t\t},\n\t\t\tthisWeekSummary: {\n\t\t\t\t[moment().startOf('isoWeek').add(0, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(1, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(2, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(3, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(4, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(5, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(6, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t}\n\t\t}\n\n\t\tif(!_.isEmpty(playerHistoryBets)){\n\t\t\tplayerHistoryBets.forEach(historyBet => {\n\t\t\t\tplayerAccount.thisWeekSummary[moment(historyBet.closedAt).format('MMM DD')].amount += Number(historyBet.resultAmount);\n\t\t\t\tplayerAccount.thisWeekSummary[moment(historyBet.closedAt).format('MMM DD')].bets++;\n\t\t\t})\n\t\t}\n\t\t\n\t\tres.json(playerAccount)\n\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\n\nexport default fetchAccount;"]}