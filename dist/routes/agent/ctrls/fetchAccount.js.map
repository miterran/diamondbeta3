{"version":3,"sources":["../../../../src/routes/agent/ctrls/fetchAccount.js"],"names":["fetchAccount","req","res","find","user","_id","agentOpenBets","$gte","startOf","$lte","endOf","agentHistoryBets","agentCurrentBalance","reduce","total","historyBet","Number","resultAmount","totalWin","openBet","wagerDetail","winAmount","totalRisk","riskAmount","straightBetCounter","orderType","parlayBetCounter","teaserBetCounter","reverseBetCounter","agentAccount","openBetStatus","straightBet","parlayBet","teaserBet","reverseBet","totalBets","length","thisWeekSummary","add","format","bets","amount","isEmpty","forEach","closedAt","json"],"mappings":"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","file":"fetchAccount.js","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash'\nimport Agent from '../../../models/Agent';\nimport { OpenBet, HistoryBet } from '../../../models/BetOrder';\n\nconst fetchAccount = async (req, res) => {\n\ttry{\n\n\t\tconst agentOpenBets = await OpenBet.find({ 'owner.agent': req.user._id }, 'orderType wagerDetail.riskAmount wagerDetail.winAmount')\n\n\t\tconst agentHistoryBets = await HistoryBet.find({ 'owner.agent': req.user._id, 'closedAt': {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek')} }, 'closedAt resultAmount')\n\n\t\tconst agentCurrentBalance = agentHistoryBets.reduce((total, historyBet) => total + Number(historyBet.resultAmount), 0)\n\n\t\tconst totalWin = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.winAmount), 0)\n\n\t\tconst totalRisk = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.riskAmount), 0)\n\n\t\tconst straightBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Straight' ), 0)\n\n\t\tconst parlayBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Parlay' ), 0)\n\n\t\tconst teaserBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Teaser6040' || openBet.orderType === 'Teaser6545' || openBet.orderType === 'Teaser7050' || openBet.orderType === 'SuperTeaser' ), 0)  // indexOf\n\n\t\tconst reverseBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'ActionReverse' || openBet.orderType === 'WinReverse' ), 0)\n\n//\t\tconst activePlayerCounter = _.uniqBy([].concat.apply([], openBets.map(openBet => openBet.owner.player)))\n\n\t\tconst agentAccount = {\n\t\t\topenBetStatus: {\n\t\t\t\tstraightBet: straightBetCounter || 0,\n\t\t\t\tparlayBet: parlayBetCounter || 0,\n\t\t\t\tteaserBet: teaserBetCounter || 0,\n\t\t\t\treverseBet: reverseBetCounter || 0,\n\t\t\t\ttotalBets: agentOpenBets.length || 0,\n\t\t\t\ttotalRisk: totalRisk || 0,\n\t\t\t\ttotalWin: totalWin || 0\n\t\t\t},\n\t\t\tthisWeekSummary: {\n\t\t\t\t[moment().startOf('isoWeek').add(0, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(1, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(2, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(3, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(4, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(5, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t\t[moment().startOf('isoWeek').add(6, 'd').format('MMM DD')]: { bets: 0, amount: 0 },\n\t\t\t}\n\t\t}\n\n\t\tif(!_.isEmpty(agentHistoryBets)){\n\t\t\tagentHistoryBets.forEach(historyBet => {\n\t\t\t\tagentAccount.thisWeekSummary[moment(historyBet.closedAt).format('MMM DD')].amount += Number(historyBet.resultAmount);\n\t\t\t\tagentAccount.thisWeekSummary[moment(historyBet.closedAt).format('MMM DD')].bets++;\n\t\t\t})\n\t\t}\n\t\t\n\t\tres.json(agentAccount)\n\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\n\nexport default fetchAccount;"]}