{"version":3,"sources":["../../../../src/routes/agent/ctrls/fetchAccount.js"],"names":["fetchAccount","req","res","find","user","_id","$gte","startOf","$lte","endOf","agentHistoryBets","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA;AAAA,sDAAe,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIY,qBAAWC,IAAX,CAAgB,EAAE,eAAeF,IAAIG,IAAJ,CAASC,GAA1B,EAA+B,YAAY,EAACC,MAAM,wBAASC,OAAT,CAAiB,SAAjB,CAAP,EAAoCC,MAAM,wBAASC,KAAT,CAAe,SAAf,CAA1C,EAA3C,EAAhB,EAAmI,uBAAnI,CAJZ;;AAAA;AAIbC,sBAJa;;AAKnBR,UAAIS,IAAJ,CAASD,gBAAT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAvCmB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA+CeV,Y","file":"fetchAccount.js","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash'\nimport Agent from '../../../models/Agent';\nimport { OpenBet, HistoryBet } from '../../../models/BetOrder';\n\nconst fetchAccount = async (req, res) => {\n\ttry{\n\n//\t\tconst agentOpenBets = await OpenBet.find({ 'owner.agent': req.user._id }, 'orderType wagerDetail.riskAmount wagerDetail.winAmount owner')\n\t\tconst agentHistoryBets = await HistoryBet.find({ 'owner.agent': req.user._id, 'closedAt': {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek')} }, 'closedAt resultAmount')\n\t\tres.json(agentHistoryBets)\n\t\t// const agentCreditPending = agentOpenBets.reduce((total, openBet) => total + openBet.wagerDetail.riskAmount, 0)\n\n\t\t// const activePlayerCounter = _.uniq(agentOpenBets.map(openBet => openBet.owner.player.toString()))\n\t\t\n\t\t// const agentCurrentStatus = {\n\t\t// \tcredit: req.user.currentStatus.credit,\n\t\t// \tcreditPending: agentCreditPending,\n\t\t// \tavailableCredit: req.user.currentStatus.credit - agentCreditPending\n\t\t// }\n\n\t\t// await Agent.findOneAndUpdate({ _id: req.user._id }, {'$set': { currentStatus: agentCurrentStatus }})\n\n\t\t// const totalWin = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.winAmount), 0)\n\t\t// const totalRisk = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.riskAmount), 0)\n\t\t// const straightBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Straight' ), 0)\n\t\t// const parlayBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Parlay' ), 0)\n\t\t// const teaserBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Teaser6040' || openBet.orderType === 'Teaser6545' || openBet.orderType === 'Teaser7050' || openBet.orderType === 'SuperTeaser' ), 0)  // indexOf\n\t\t// const reverseBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'ActionReverse' || openBet.orderType === 'WinReverse' ), 0)\n\n\t\t// const agentAccount = {\n\t\t// \topenBetStatus: {\n\t\t// \t\tactivePlayer: activePlayerCounter.length,\n\t\t// \t\tstraightBet: straightBetCounter || 0,\n\t\t// \t\tparlayBet: parlayBetCounter || 0,\n\t\t// \t\tteaserBet: teaserBetCounter || 0,\n\t\t// \t\treverseBet: reverseBetCounter || 0,\n\t\t// \t\ttotalBets: agentOpenBets.length || 0,\n\t\t// \t\ttotalRisk: totalRisk || 0,\n\t\t// \t\ttotalWin: totalWin || 0\n\t\t// \t},\n\t\t// \tthisWeekHistoryBetList: agentHistoryBets,\n\t\t// }\n\n\t\t// res.json(agentAccount)\n\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\n\nexport default fetchAccount;"]}