{"version":3,"sources":["../../../../src/routes/agent/ctrls/fetchAccount.js"],"names":["fetchAccount","req","res","find","user","_id","agentOpenBets","$gte","startOf","$lte","endOf","agentHistoryBets","agentCreditPending","reduce","total","openBet","wagerDetail","riskAmount","activePlayerCounter","uniqBy","concat","apply","map","owner","player","agentCurrentStatus","activePlayer","length","credit","currentStatus","creditPending","availableCredit","findOneAndUpdate","totalWin","Number","winAmount","totalRisk","straightBetCounter","orderType","parlayBetCounter","teaserBetCounter","reverseBetCounter","agentAccount","openBetStatus","straightBet","parlayBet","teaserBet","reverseBet","totalBets","thisWeekHistoryBetList","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA;AAAA,sDAAe,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGS,kBAAQC,IAAR,CAAa,EAAE,eAAeF,IAAIG,IAAJ,CAASC,GAA1B,EAAb,EAA8C,8DAA9C,CAHT;;AAAA;AAGbC,mBAHa;AAAA;AAAA,aAIY,qBAAWH,IAAX,CAAgB,EAAE,eAAeF,IAAIG,IAAJ,CAASC,GAA1B,EAA+B,YAAY,EAACE,MAAM,wBAASC,OAAT,CAAiB,SAAjB,CAAP,EAAoCC,MAAM,wBAASC,KAAT,CAAe,SAAf,CAA1C,EAA3C,EAAhB,EAAmI,uBAAnI,CAJZ;;AAAA;AAIbC,sBAJa;AAMbC,wBANa,GAMQN,cAAcO,MAAd,CAAqB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,QAAQC,QAAQC,WAAR,CAAoBC,UAAhD;AAAA,OAArB,EAAiF,CAAjF,CANR;AAQbC,yBARa,GAQS,iBAAEC,MAAF,CAAS,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBf,cAAcgB,GAAd,CAAkB;AAAA,cAAWP,QAAQQ,KAAR,CAAcC,MAAzB;AAAA,OAAlB,CAApB,CAAT,CART;AAUbC,wBAVa,GAUQ;AAC1BC,qBAAcR,oBAAoBS,MADR;AAE1BC,eAAQ3B,IAAIG,IAAJ,CAASyB,aAAT,CAAuBD,MAFL;AAG1BE,sBAAelB,kBAHW;AAI1BmB,wBAAiB9B,IAAIG,IAAJ,CAASyB,aAAT,CAAuBD,MAAvB,GAAgChB;AAJvB,OAVR;AAAA;AAAA,aAiBb,gBAAMoB,gBAAN,CAAuB,EAAE3B,KAAKJ,IAAIG,IAAJ,CAASC,GAAhB,EAAvB,EAA8C,EAAC,QAAQ,EAAEwB,eAAeJ,kBAAjB,EAAT,EAA9C,CAjBa;;AAAA;AAmBbQ,cAnBa,GAmBF3B,cAAcO,MAAd,CAAqB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,QAAQoB,OAAOnB,QAAQC,WAAR,CAAoBmB,SAA3B,CAA5B;AAAA,OAArB,EAAwF,CAAxF,CAnBE;AAoBbC,eApBa,GAoBD9B,cAAcO,MAAd,CAAqB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,QAAQoB,OAAOnB,QAAQC,WAAR,CAAoBC,UAA3B,CAA5B;AAAA,OAArB,EAAyF,CAAzF,CApBC;AAqBboB,wBArBa,GAqBQ/B,cAAcO,MAAd,CAAqB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,SAAUC,QAAQuB,SAAR,KAAsB,UAAhC,CAApB;AAAA,OAArB,EAAuF,CAAvF,CArBR;AAsBbC,sBAtBa,GAsBMjC,cAAcO,MAAd,CAAqB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,SAAUC,QAAQuB,SAAR,KAAsB,QAAhC,CAApB;AAAA,OAArB,EAAqF,CAArF,CAtBN;AAuBbE,sBAvBa,GAuBMlC,cAAcO,MAAd,CAAqB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,SAAUC,QAAQuB,SAAR,KAAsB,YAAtB,IAAsCvB,QAAQuB,SAAR,KAAsB,YAA5D,IAA4EvB,QAAQuB,SAAR,KAAsB,YAAlG,IAAkHvB,QAAQuB,SAAR,KAAsB,aAAlJ,CAApB;AAAA,OAArB,EAA4M,CAA5M,CAvBN,EAuBsN;;AACnOG,uBAxBa,GAwBOnC,cAAcO,MAAd,CAAqB,UAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBD,SAAUC,QAAQuB,SAAR,KAAsB,eAAtB,IAAyCvB,QAAQuB,SAAR,KAAsB,YAAzE,CAApB;AAAA,OAArB,EAAkI,CAAlI,CAxBP;AA0BbI,kBA1Ba,GA0BE;AACpBC,sBAAe;AACdC,qBAAaP,sBAAsB,CADrB;AAEdQ,mBAAWN,oBAAoB,CAFjB;AAGdO,mBAAWN,oBAAoB,CAHjB;AAIdO,oBAAYN,qBAAqB,CAJnB;AAKdO,mBAAW1C,cAAcqB,MAAd,IAAwB,CALrB;AAMdS,mBAAWA,aAAa,CANV;AAOdH,kBAAUA,YAAY;AAPR,QADK;AAUpBgB,+BAAwBtC;AAVJ,OA1BF;;;AAuCnBT,UAAIgD,IAAJ,CAASR,YAAT;;AAvCmB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA+Ce1C,Y","file":"fetchAccount.js","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash'\nimport Agent from '../../../models/Agent';\nimport { OpenBet, HistoryBet } from '../../../models/BetOrder';\n\nconst fetchAccount = async (req, res) => {\n\ttry{\n\n\t\tconst agentOpenBets = await OpenBet.find({ 'owner.agent': req.user._id }, 'orderType wagerDetail.riskAmount wagerDetail.winAmount owner')\n\t\tconst agentHistoryBets = await HistoryBet.find({ 'owner.agent': req.user._id, 'closedAt': {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek')} }, 'closedAt resultAmount')\n\n\t\tconst agentCreditPending = agentOpenBets.reduce((total, openBet) => total + openBet.wagerDetail.riskAmount, 0)\n\n\t\tconst activePlayerCounter = _.uniqBy([].concat.apply([], agentOpenBets.map(openBet => openBet.owner.player)))\n\n\t\tconst agentCurrentStatus = {\n\t\t\tactivePlayer: activePlayerCounter.length,\n\t\t\tcredit: req.user.currentStatus.credit,\n\t\t\tcreditPending: agentCreditPending,\n\t\t\tavailableCredit: req.user.currentStatus.credit - agentCreditPending\n\t\t}\n\n\t\tawait Agent.findOneAndUpdate({ _id: req.user._id }, {'$set': { currentStatus: agentCurrentStatus }})\n\n\t\tconst totalWin = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.winAmount), 0)\n\t\tconst totalRisk = agentOpenBets.reduce((total, openBet) => total + Number(openBet.wagerDetail.riskAmount), 0)\n\t\tconst straightBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Straight' ), 0)\n\t\tconst parlayBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Parlay' ), 0)\n\t\tconst teaserBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'Teaser6040' || openBet.orderType === 'Teaser6545' || openBet.orderType === 'Teaser7050' || openBet.orderType === 'SuperTeaser' ), 0)  // indexOf\n\t\tconst reverseBetCounter = agentOpenBets.reduce((total, openBet) => total + ( openBet.orderType === 'ActionReverse' || openBet.orderType === 'WinReverse' ), 0)\n\n\t\tconst agentAccount = {\n\t\t\topenBetStatus: {\n\t\t\t\tstraightBet: straightBetCounter || 0,\n\t\t\t\tparlayBet: parlayBetCounter || 0,\n\t\t\t\tteaserBet: teaserBetCounter || 0,\n\t\t\t\treverseBet: reverseBetCounter || 0,\n\t\t\t\ttotalBets: agentOpenBets.length || 0,\n\t\t\t\ttotalRisk: totalRisk || 0,\n\t\t\t\ttotalWin: totalWin || 0\n\t\t\t},\n\t\t\tthisWeekHistoryBetList: agentHistoryBets,\n\t\t}\n\n\t\tres.json(agentAccount)\n\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\n\nexport default fetchAccount;"]}