{"version":3,"sources":["../../../../src/routes/agent/ctrls/agentAccountSetting.js"],"names":["agentAccountSetting","req","res","body","currentPassword","newPassword","newPasscode","updatePass","findOne","_id","user","agent","account","password","toLowerCase","json","isEmpty","findOneAndUpdate","$set","new","updatedAgent"],"mappings":";;;;;;AAEA;;;;AAEA;;;;;;2cAJA;AACA;;AAEA;;;AAGA,IAAMA;AAAA,sDAAsB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE4BD,IAAIE,IAFhC,EAElBC,eAFkB,aAElBA,eAFkB,EAEDC,WAFC,aAEDA,WAFC,EAEYC,WAFZ,aAEYA,WAFZ;AAGtBC,gBAHsB,GAGT,EAHS;AAAA;AAAA,aAIN,gBAAMC,OAAN,CAAc,EAAEC,KAAKR,IAAIS,IAAJ,CAASD,GAAhB,EAAd,EAAqC,kBAArC,CAJM;;AAAA;AAIpBE,WAJoB;;AAAA,YAKvBA,MAAMC,OAAN,CAAcC,QAAd,CAAuBC,WAAvB,OAAyCV,gBAAgBU,WAAhB,EALlB;AAAA;AAAA;AAAA;;AAMzBZ,UAAIa,IAAJ,CAAS,UAAT;AANyB;AAAA;;AAAA;AAQzB,UAAG,CAAC,iBAAEC,OAAF,CAAUX,WAAV,CAAJ,EAA4BE,WAAW,kBAAX,IAAiCF,WAAjC;AAC5B,UAAG,CAAC,iBAAEW,OAAF,CAAUV,WAAV,CAAJ,EAA4BC,WAAW,kBAAX,IAAiCD,WAAjC;AATH;AAAA,aAUE,gBAAMW,gBAAN,CAAuB,EAAER,KAAKR,IAAIS,IAAJ,CAASD,GAAhB,EAAvB,EAA8C,EAAES,MAAMX,UAAR,EAA9C,EAAoE,EAAEY,KAAK,IAAP,EAApE,CAVF;;AAAA;AAUnBC,kBAVmB;;AAWzBlB,UAAIa,IAAJ,CAAS,MAAT;;AAXyB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAkBef,mB","file":"agentAccountSetting.js","sourcesContent":["//import moment from 'moment'\n// import Player from '../../../models/Player';\nimport Agent from '../../../models/Agent';\n// import SuperAgent from '../../../models/SuperAgent';\nimport _ from 'lodash'\n\nconst agentAccountSetting = async (req, res) => {\n\ttry{\n\t\tconst { currentPassword, newPassword, newPasscode } = req.body\n\t\tlet updatePass = {}\n\t\tconst agent = await Agent.findOne({ _id: req.user._id }, 'account.password')\n\t\tif(agent.account.password.toLowerCase() !== currentPassword.toLowerCase()){\n\t\t\tres.json('notMatch')\n\t\t}else{\n\t\t\tif(!_.isEmpty(newPassword)) updatePass['account.password'] = newPassword\n\t\t\tif(!_.isEmpty(newPasscode)) updatePass['account.passcode'] = newPasscode\n\t\t\tconst updatedAgent = await Agent.findOneAndUpdate({ _id: req.user._id }, { $set: updatePass }, { new: true })\n\t\t\tres.json('pass')\n\t\t}\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default agentAccountSetting;\n\n"]}