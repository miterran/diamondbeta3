{"version":3,"sources":["../../src/routes/createAccount.js"],"names":["router","Router","get","req","res","preTransactions","findOne","agent","find","_id","agentDeposits","agentHistoryBets","concat","sort","a","b","Date","closedAt","resultAmount","Promise","all","map","transaction","newAgentTransaction","owner","superAgent","orderType","orderNumber","createdAt","creditAmount","transactionType","player","save","then","agentOpenBets","agentCreditPending","reduce","total","openBet","wagerDetail","riskAmount","activePlayerCounter","uniqBy","apply","agentCurrentStatus","activePlayer","length","credit","creditPending","availableCredit","findOneAndUpdate","currentStatus","json","players","$set","lastOnline","push","result","history","openBets","forEach","console","log","newPlayer","account","username","password","passcode","activate","newOne","isEmpty","newAgent","newSuperAgent","catch","err","populate","newResult","utc","uniqueId"],"mappings":"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","file":"createAccount.js","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash';\n\nimport SuperAgent from '../models/SuperAgent';\nimport Agent from '../models/Agent';\nimport Player from '../models/Player';\nimport AgentDeposit from '../models/AgentDeposit'\nimport { HistoryBet, OpenBet } from '../models/BetOrder';\nimport AgentTransaction from '../models/AgentTransaction';\nimport updatePlayerStatusAfterOrder from '../updateDB/updateUser/updatePlayerStatusAfterOrder'\n\nimport express from 'express';\nconst router = express.Router();\n\n\nrouter.get('/make-agent-transaction', async (req, res) => {\n\n\tlet preTransactions = []\n\n\tconst agent = await Agent.findOne({ 'account.username': 'M999' })\n\tconst agentDeposits = await AgentDeposit.find({ 'owner.agent': agent._id })\n\tconst agentHistoryBets = await HistoryBet.find({ 'owner.agent': agent._id, 'status': 'Lost' }, 'orderNumber orderType resultAmount owner closedAt')\n\n\tpreTransactions = agentDeposits.concat(agentHistoryBets)\n\n\tpreTransactions.sort((a, b) => { return new Date(a.closedAt) - new Date(b.closedAt) })\n\n\tlet resultAmount = 0\n\n\tawait Promise.all(preTransactions.map(async transaction => {\n\t\tlet newAgentTransaction = new AgentTransaction({\n\t\t\towner:{\n\t\t\t\t// player: { type: Schema.Types.ObjectId, ref: 'Player' },\n\t\t\t\tsuperAgent : agent.superAgent,\n\t\t\t\tagent : agent._id\n\t\t\t},\n\t\t\torderType: transaction.orderType,\n//\t\t\ttransactionType: { type: String, enum: [ 'in', 'out' ] },\n//\t\t\tcreditAmount: { type: Number },\n//\t\t\tresultAmount: { type: Number },\n\t\t\torderNumber: transaction.orderNumber,\n\t\t\tcreatedAt: moment(transaction.closedAt)\n\t\t})\n\n\t\tif(transaction.orderType === 'Deposit'){\n\t\t\tresultAmount += transaction.creditAmount\n\t\t\tnewAgentTransaction.transactionType = 'in'\n\t\t\tnewAgentTransaction.creditAmount = transaction.creditAmount\n\t\t\tnewAgentTransaction.resultAmount = resultAmount\n\t\t}else{\n\t\t\tresultAmount += transaction.resultAmount\n\t\t\tnewAgentTransaction.transactionType = 'out'\n\t\t\tnewAgentTransaction.owner.player = transaction.owner.player\n\t\t\tnewAgentTransaction.creditAmount = transaction.resultAmount\n\t\t\tnewAgentTransaction.resultAmount = resultAmount\n\t\t}\n\n\t\tawait newAgentTransaction.save()\n\n\t})).then( async () => {\n\n\t\tconst agentOpenBets = await OpenBet.find({ 'owner.agent': agent._id }, 'orderType wagerDetail.riskAmount wagerDetail.winAmount owner')\n\t\tconst agentCreditPending = agentOpenBets.reduce((total, openBet) => total + openBet.wagerDetail.riskAmount, 0)\n\t\tconst activePlayerCounter = _.uniqBy([].concat.apply([], agentOpenBets.map(openBet => openBet.owner.player)))\n\n\t\tconst agentCurrentStatus = {\n\t\t\tactivePlayer: activePlayerCounter.length,\n\t\t\tcredit: resultAmount,\n\t\t\tcreditPending: agentCreditPending,\n\t\t\tavailableCredit: resultAmount - agentCreditPending\n\t\t}\n\n\t\tawait Agent.findOneAndUpdate({ _id: agent._id }, {'$set': { currentStatus: agentCurrentStatus }})\n\n\t}).then(() => {\n\t\tres.json('done')\n\t})\n\n\t// res.json('done')\n\n})\n\n\n\n\n\n\n\n\nrouter.get('/update-all-players', async (req, res) => {\n\tconst players = await Player.find({})\n\tawait Promise.all(players.map(async player => {\n\t\tawait Player.findOneAndUpdate({ _id: player._id }, {$set: { lastOnline: moment() }})\n\t})).then(() => {\n\t\tres.json('done')\n\t})\n})\n\n\nrouter.get('/reset-all-agent-player', async (req, res) => {\n\n\tconst agent = await Agent.findOne({ 'account.username': 'M999' })\n\n\tconst player = await Player.findOneAndUpdate({ 'account.username': 'X8752' }, { $set: { 'owner.agent': agent._id} })\n\tagent.players.push(player._id)\n\tawait agent.save()\n\tawait HistoryBet.find({ 'owner.player': player._id }).then(async result => {\n\t\tawait Promise.all(result.map(async history => {\n\t\t\tawait HistoryBet.findOneAndUpdate({ _id: history._id }, { $set: { 'owner.agent': agent._id }})\n\t\t\treturn null\n\t\t}))\n\t\t\n\t})\n\n\tawait OpenBet.find({ 'owner.player': player._id }).then( async openBets => {\n\t\tawait Promise.all(openBets.map(async openBet => {\n\t\t\tawait OpenBet.findOneAndUpdate({ _id: openBet._id }, { $set: { 'owner.agent': agent._id }})\n\t\t\treturn null\n\t\t}))\n\t})\n\n\tres.json('done')\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrouter.get('/push', async (req, res) => {\n\n\tconst agent = await Agent.findOne({ 'account.username': 'diamond' })\n\tconst players = await Player.find({ agent: agent._id }, '_id')\n\n\tplayers.forEach(player => {\n\t\tagent.players.push(player)\n\t})\n\n\tawait agent.save()\n\tconsole.log(players)\n\tres.json(agent)\n\n})\n\nrouter.get('/setup', async (req, res) => {\n\tconst players = await Player.find({})\n\tawait Promise.all(players.map(async player => {\n\t\tawait updatePlayerStatusAfterOrder(player._id)\n\t})).then(() => {\n\t\tres.json('done')\n\t})\n})\n\n\nrouter.get('/create-player', async (req, res) => {\n\tconst superAgent = await SuperAgent.findOne({ 'account.username': 'boss' })\n\tconst agent = await Agent.findOne({'account.username': 'diamond'})\n\tlet newPlayer = new Player({\n\t\taccount: {\n\t\t\tusername: 'f',\n\t\t\tpassword: '1234',\n\t\t\tpasscode: '4321',\n\t\t\tactivate: true,\n\t\t},\n\t\tsuperAgent: superAgent._id,\n\t\tagent: agent._id\n\t})\n\tconst player = await newPlayer.save().then(async newOne => {\n\t\tawait updatePlayerStatusAfterOrder(newOne._id)\n\t})\n\t// await agent.players.push(player._id)\n\t// await agent.save()\n\t// await superAgent.players.push(player._id)\n\t// await superAgent.save()\n\n\tres.json(player)\n})\n\n\nrouter.get('/create-agent', async (req, res) => {\n\tconst superAgent = await SuperAgent.findOne({ 'account.username': 'boss' })\n\tif(!_.isEmpty(superAgent)){\n\t\tlet newAgent = new Agent({\n\t\t\taccount: {\n\t\t\t\tusername: 'diamond',\n\t\t\t}\n\t\t})\n\t\tconst agent = await newAgent.save()\n//\t\tsuperAgent.agents.push(agent._id)\n//\t\tawait superAgent.save()\n\t\tres.json('done')\n\t}else{\n\t\tres.json('super agent not found')\n\t}\n})\n\n\nrouter.get('/create-super-agent', (req, res) => {\n\tlet newSuperAgent = new SuperAgent({\n\t\taccount: {\n\t\t\tusername: 'boss',\n\t\t\tpassword: '1234',\n\t\t\tpasscode: '4321',\n\t\t\tactivate: true\n\t\t}\n\t})\n\tnewSuperAgent.save().then(() => { \n\t\tconsole.log('saved superAgent') \n\t\tres.json('saved superAgent')\n\t}).catch(err => { throw err })\n})\n\nrouter.get('/agent-info', (req, res) => {\n\tAgent.findOne({ 'account.username': 'diamond' }).populate('players').then(agent => {\n\t\tres.json(agent)\n\t})\n})\n\nimport { Result } from '../models/EventOdd';\n\nrouter.get('/create-result', (req, res) => {\n\n\tlet newResult = new Result({\n\n\t\t\t\"eventResultId\" : \"pickMon_College_GAME_1414713\",\n\t\t\t\"uniqueId\": \"221_222_FOOTBALL_GAME_08312017\",\n\t\t    \"sport\" : \"Football\",\n\t\t    \"oddType\" : \"Game\",\n\t\t    \"league\" : \"College\",\n\t\t    \"region\" : \"\",\n\t\t    \"details\" : \"Presbyterian College At Wake Forest\",\n\t\t    \"matchTime\" : moment.utc(\"2017-08-31T22:30:00.000Z\"),\n\t\t    \"expireAt\" : moment.utc(\"2017-09-03T11:00:00.000Z\"),\n\t\t    \"status\" : \"Finished\",\n\t\t    \"score\" : {\n\t\t        \"awayScore\" : 51,\n\t\t        \"homeScore\" : 7\n\t\t    },\n\t\t    \"team\" : {\n\t\t        \"awayROT\" : \"222\",\n\t\t        \"away\" : \"Wake Forest\",\n\t\t        \"homeROT\" : \"221\",\n\t\t        \"home\" : \"Presbyterian College\"\n\t\t    },\n\t\t    \"source\" : {\n\t\t        \"provider\" : \"custom\",\n\t\t        \"id\" : \"0\"\n\t\t    }\n\t\t})\n\n\tResult.findOne({ uniqueId: newResult.uniqueId }).then(result => {\n\t\tif(_.isEmpty(result)){\n\t\t\tnewResult.save().then(() => { res.json('done')})\n\t\t}else{\n\t\t\tres.json('existed')\n\t\t}\n\t})\n\n\t\n\n})\n\n\n\nexport default router;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}