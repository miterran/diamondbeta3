{"version":3,"sources":["../../../../src/routes/superAgent/ctrls/addGame.js"],"names":["addGame","req","res","gameInfo","body","console","log","cutOff","cutOffTime","matchTime","add","newEventOdd","sport","oddType","expireAt","league","uniqueId","team","homeROT","awayROT","replace","toUpperCase","format","odds","drawLine","underLine","Number","overLine","totalNumber","pointSpreadAwayLine","pointSpreadHomeLine","pointSpreadAway","pointSpreadHome","moneyLineAway","moneyLineHome","awayRot","away","homeRot","home","source","lastUpdated","id","process","bookmaker","provider","findOne","existedEventOdd","isEmpty","save","err","json"],"mappings":"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","file":"addGame.js","sourcesContent":["import _ from 'lodash';\nimport uniqid from 'uniqid';\nimport moment from 'moment';\n\nimport AgentDeposit from '../../../models/AgentDeposit';\nimport AgentTransaction from '../../../models/AgentTransaction';\nimport Agent from '../../../models/Agent';\nimport { EventOdd } from '../../../models/EventOdd';\n\nconst addGame = async (req, res) => {\n\ttry{\n\n\t\tconst { gameInfo } = req.body\n\t\tconsole.log(gameInfo)\n\t\tlet cutOff = ''\n\n\t\tif(gameInfo.cutOffTime === ''){\n\t\t\tcutOff = moment(gameInfo.matchTime).add(900, 'seconds')\n\t\t}else{\n\t\t\tcutOff = moment(gameInfo.cutOffTime)\n\t\t}\n\n\t\tlet newEventOdd = new EventOdd({\n\n\t\t\tsport: gameInfo.sport,\n\t\t\toddType: gameInfo.oddType,\n\t\t\tmatchTime: moment(gameInfo.matchTime),\n\t\t\tcutOffTime: cutOff,\n\t\t\texpireAt: moment(gameInfo.matchTime).add(3600, 'seconds'),\n\t\t\tleague: gameInfo.league,\n\t\t\tuniqueId: `${gameInfo.team.homeROT}_${gameInfo.team.awayROT}_${gameInfo.sport.replace(/\\s/g,'').toUpperCase()}_${gameInfo.oddType.replace(/\\s/g,'').toUpperCase()}_${moment(gameInfo.matchTime).format('MMDDYYYY')}`,\n\t\t\todds: { \n\t\t\t\tdrawLine: 0,\n\t\t\t \tunderLine: Number(gameInfo.odds.underLine),\n\t\t\t \toverLine: Number(gameInfo.odds.overLine),\n\t\t\t \ttotalNumber: Number(gameInfo.odds.totalNumber),\n\t\t\t \tpointSpreadAwayLine: Number(gameInfo.odds.pointSpreadAwayLine),\n\t\t\t \tpointSpreadHomeLine: Number(gameInfo.odds.pointSpreadHomeLine),\n\t\t\t \tpointSpreadAway: Number(gameInfo.odds.pointSpreadAway),\n\t\t\t \tpointSpreadHome: Number(gameInfo.odds.pointSpreadHome),\n\t\t\t \tmoneyLineAway: Number(gameInfo.odds.moneyLineAway),\n\t\t\t \tmoneyLineHome: Number(gameInfo.odds.moneyLineHome),\n\t\t\t },\n\t\t\t team: {\n\t\t\t \tawayRot: gameInfo.team.awayRot,\n\t\t\t \taway: gameInfo.team.away,\n\t\t\t \thomeRot: gameInfo.team.homeRot,\n\t\t\t \thome: gameInfo.team.home,\n\t\t\t },\n\t\t\t source: {\n\t\t\t \tlastUpdated: moment(),\n\t\t\t \tid: uniqid.process().toUpperCase(),\n\t\t\t \tbookmaker: 'super',\n\t\t\t \tprovider: 'super'\n\t\t\t }\n\t\t})\n\n\t\tconst existedEventOdd = await EventOdd.findOne({ uniqueId: newEventOdd.uniqueId })\n\n\t\tif(_.isEmpty(existedEventOdd)){\n\t\t\tawait newEventOdd.save(err => {\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(`saved ${newEventOdd.uniqueId}`)\n\t\t\tres.json('done')\n\t\t}else{\n\t\t\tres.json('existed')\n\t\t}\n\n\t}catch(err){\n\t\tthrow err\n\t}\n}\n\nexport default addGame;\n\n\n"]}