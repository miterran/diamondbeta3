{"version":3,"sources":["../../src/schedule/resetUserStatus.js"],"names":["resetUserStatus","findOne","usage","cooldownTimer","sec","isoWeek","find","players","Promise","all","map","player","_id","agents","agent","findOneAndUpdate","$set","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA;AAAA,sDAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGM,mBAASC,OAAT,CAAiB,EAAEC,OAAO,iBAAT,EAAjB,EAA+C,KAA/C,CAHN;;AAAA;AAGhBC,mBAHgB;;AAAA,YAInBA,cAAcC,GAAd,KAAsB,wBAASC,OAAT,EAJH;AAAA;AAAA;AAAA;;AAAA;AAAA,aAKC,iBAAOC,IAAP,CAAY,EAAZ,EAAgB,KAAhB,CALD;;AAAA;AAKfC,aALe;AAAA;AAAA,aAMfC,QAAQC,GAAR,CAAYF,QAAQG,GAAR;AAAA,6DAAY,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACvB,4CAA6BA,OAAOC,GAApC,CADuB;;AAAA;AAAA,6CAEtB,IAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;;AAAA;AAAA;AAAA;AAAA,UAAZ,CANe;;AAAA;AAAA;AAAA,aAWA,gBAAMN,IAAN,CAAW,EAAX,EAAe,KAAf,CAXA;;AAAA;AAWfO,YAXe;AAAA;AAAA,aAYfL,QAAQC,GAAR,CAAYI,OAAOH,GAAP;AAAA,6DAAW,kBAAMI,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACtB,kDAAmCA,MAAMF,GAAzC,CADsB;;AAAA;AAAA,8CAErB,IAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;;AAAA;AAAA;AAAA;AAAA,UAAZ,CAZe;;AAAA;AAAA;AAAA,aAiBf,mBAASG,gBAAT,CAA0B,EAAEb,OAAO,iBAAT,EAA1B,EAAwD,EAAEc,MAAM,EAAEZ,KAAK,wBAASC,OAAT,EAAP,EAAR,EAAxD,CAjBe;;AAAA;AAkBrBY,cAAQC,GAAR,CAAY,cAAZ;;AAlBqB;AAAA;;AAAA;AAqBrBD,cAAQC,GAAR,CAAY,kBAAZ;;AArBqB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA8BelB,e","file":"resetUserStatus.js","sourcesContent":["import updateAgentOpenBetStatusAfterOrder from '../updateDB/updateUser/updateAgentOpenBetStatusAfterOrder'\nimport updatePlayerStatusAfterOrder from '../updateDB/updateUser/updatePlayerStatusAfterOrder'\nimport Player from '../models/Player'\nimport Agent from '../models/Agent'\nimport CoolDown from '../models/CoolDown'\nimport moment from 'moment'\n\nconst resetUserStatus = async () => {\n\t\n\ttry{\n\t\tconst cooldownTimer = await CoolDown.findOne({ usage: 'resetUserStatus' }, 'sec')\n\t\tif(cooldownTimer.sec !== moment().isoWeek()){\n\t\t\tconst players = await Player.find({}, '_id')\n\t\t\tawait Promise.all(players.map(async player => {\n\t\t\t\tawait updatePlayerStatusAfterOrder(player._id)\n\t\t\t\treturn null\n\t\t\t}))\n\n\t\t\tconst agents = await Agent.find({}, '_id')\n\t\t\tawait Promise.all(agents.map(async agent => {\n\t\t\t\tawait updateAgentOpenBetStatusAfterOrder(agent._id)\n\t\t\t\treturn null\n\t\t\t}))\n\n\t\t\tawait CoolDown.findOneAndUpdate({ usage: 'resetUserStatus' }, { $set: { sec: moment().isoWeek() } })\n\t\t\tconsole.log('auto updated')\n\n\t\t}else{\n\t\t\tconsole.log('skip auto update')\n\t\t}\n\n\t}catch(err){\n\t\tthrow err\n\t}\n\n}\n\nexport default resetUserStatus"]}